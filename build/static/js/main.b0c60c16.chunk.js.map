{"version":3,"sources":["team-data.js","TeamModal.jsx","teamCard.jsx","TeamColumn.jsx","playerCard.jsx","PlayerColumn.jsx","PlayerPool.jsx","initial-data.js","Mock.js","ShareModal.jsx","DraftCompiler.jsx","App.js","serviceWorker.js","index.js","images/yellow_brown_logo.png"],"names":["teamData","0","name","color","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","HiddenButton","styled","button","TeamModal","props","useState","show","setShow","handleClose","state","value","sendData","parentCallback","id","onClick","teamName","Modal","onHide","Header","closeButton","Title","index","Form","Body","Group","controlId","Control","as","onChange","event","target","console","log","Object","keys","map","Footer","Button","variant","StyledCard","Card","ColoredCardBody","div","teamColor","TeamCard","callbackFunction","childData","teams","teamId","content","parseInt","newState2","setState","draggableId","this","provided","snapshot","draggableProps","dragHandleProps","innerRef","ref","isDragging","Text","React","Component","Container","DraftList","isDraggingOver","TeamColumn","title","teamIds","column","droppableId","droppableProps","key","placeholder","StyledCardHeader","StyledCardBody","PlayerCard","playerId","players","playerName","pos","PlayerList","includes","draggingOverWith","PlayerColumn","playerIds","allPlayerIds","teamColumn","PlayerPool","request","XMLHttpRequest","open","send","initialData","playerFile2","columns","columnOrder","draftOrder","DraftTable","Mock","playerColumnIds","ids","pickedPlayers","onDragEnd","result","destination","source","newTeamIds","Array","from","splice","newColumn","newState","startColumn","finishColumn","newPlayerIds","length","startPlayerIds","finishPlayerIds","newStartColumn","newFinishColumn","newAltState","defaultOrder","filledTeamIds","counter","push","PlayersFile","columnId","actualTeams","unpickedPlayers","draftText","draftInfo","text","redditFormat","newLine","chosenPick","position","school","DraftCompiler","ShareModal","draftOutput","teamInfo","rows","defaultValue","Top","message","className","src","logo","alt","ToggleButtonGroup","type","size","ToggleButton","disabled","active","App","rel","href","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b0c60c16.chunk.js","sourcesContent":["const teamData = {\n    0: {\n        name: \"Arizona Cardinals\",\n        color: '#97233F'\n    },\n    1: {\n        name: \"Atlanta Falcons\",\n        color: \"#a71930\"\n    },\n    2: {\n        name: \"Baltimore Ravens\",\n        color: \"#241773\"\n    },\n    3: {\n        name: \"Buffalo Bills\",\n        color: \"#00338D\"\n    },\n    4: {\n        name: \"Carolina Panthers\",\n        color: \"#0085CA\"\n    },\n    5: {\n        name: \"Chicago Bears\",\n        color: \"#c83803\"\n    },\n    6: {\n        name: \"Cincinnati Bengals\",\n        color: \"#fb4f14\"\n    },\n    7: {\n        name: \"Cleveland Browns\",\n        color: \"#ff3c00\"\n    },\n    8: {\n        name: \"Dallas Cowboys\",\n        color: \"#041E42\"\n    },\n    9: {\n        name: \"Denver Broncos\",\n        color: \"#FB4F14\"\n    },\n    10: {\n        name: \"Detroit Lions\",\n        color: \"#0076b6\"\n    },\n    11: {\n        name: \"Green Bay Packers\",\n        color: \"#203731\"\n    },\n    12: {\n        name: \"Houston Texans\",\n        color: \"#03202f\"\n    },\n    13: {\n        name: \"Indianapolis Colts\",\n        color: \"#002C5F\"\n    },\n    14: {\n        name: \"Jacksonville Jaguars\",\n        color: \"#006778\"\n    },\n    15: {\n        name: \"Kansas City Chiefs\",\n        color: \"#E31837\"\n    },\n    16: {\n        name: \"Los Angeles Chargers\",\n        color: \"#0080C6\"\n    },\n    17: {\n        name: \"Los Angeles Rams\",\n        color: \"#002244\"\n    },\n    18: {\n        name: \"Miami Dolphins\",\n        color: \"#008E97\"\n    },\n    19: {\n        name: \"Minnesota Vikings\",\n        color: \"#4F2683\"\n    },\n    20: {\n        name: \"New England Patriots\",\n        color: \"#002244\"\n    },\n    21: {\n        name: \"New Orleans Saints\",\n        color: \"#D3BC8D\"\n    },\n    22: {\n        name: \"New York Giants\",\n        color: \"#0B2265\"\n    },\n    23: {\n        name: \"New York Jets\",\n        color: \"#125740\"\n    },\n    24: {\n        name: \"Oakland Raiders\",\n        color: \"#000000\"\n    },\n    25: {\n        name: \"Philadelphia Eagles\",\n        color: \"#004C54\"\n    },\n    26: {\n        name: \"Pittsburgh Steelers\",\n        color: \"#FFB612\"\n    },\n    27: {\n        name: \"San Francisco 49ers\",\n        color: \"#AA0000\"\n    },\n    28: {\n        name: \"Seattle Seahawks\",\n        color: \"#002244\"\n    },\n    29: {\n        name: \"Tampa Bay Buccaneers\",\n        color: \"#D50A0A\"\n    },\n    30: {\n        name: \"Tennessee Titans\",\n        color: \"#0C2340\"\n    },\n    31: {\n        name: \"Washington Redskins\",\n        color: \"#773141\"\n    }\n}\n\nexport default teamData","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './css/TeamModal.css';\n\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n    \n`;\n\n\nexport default function TeamModal(props) {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    var state = {\n        value: 0\n    }\n\n\n    const handleChange = (event) => {\n        state = { value: event.target.value }\n        console.log(state.value)\n        sendData();\n        //props.teamId = state.value;\n        \n    }\n    //TODO: Fix later\n    const handleSubmit = (event) => {\n        console.log(state.value)\n        props.teamId = state.value;        \n    }\n\n    const sendData = () => {\n        props.parentCallback({\n            id: state.id,\n            value: state.value\n        });\n        \n    }\n\n    return (\n        <>\n        <HiddenButton onClick={handleShow}>\n            {props.teamName}\n        </HiddenButton>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Pick #{props.index + 1}</Modal.Title>\n            </Modal.Header>\n            <Form>\n                <Modal.Body>Choose Traded Team:<br />\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n\n                        <Form.Control as=\"select\" onChange={handleChange}>\n                            {Object.keys(teamData).map((value, index) => (\n                                <option id={index} value={value}>{teamData[value].name} </option>\n                            ))\n                            }\n                        </Form.Control>\n                    </Form.Group>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n            </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    );\n\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport TeamModal from './TeamModal';\n\n\nconst StyledCard = styled(Card) `\n    \n\n    color: white;\n    background-color: #92a8d1;\n\tfont-size: 1em;\n\tborder-style: solid;\n\t\n\tborder: 4px solid palevioletred;\n\tborder-radius: 3px;\n    margin-bottom: 1%;\n`;\n\nconst ColoredCardBody = styled.div`\n    background-color: ${props => props.teamColor};\n`;\n\n\nexport default class TeamCard extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        //console.log(props.value)\n        const teamId = props.value\n        //console.log(props.teams[props.value])\n\n        this.state = {\n            id: props.id,\n            teamId: props.value,\n            teamName: teamData[props.teams[teamId].content].name,\n            teamColor: teamData[props.teams[teamId].content].color\n            //teamLink: null,\n            //teamImage: null\n        }\n\n\n    }\n\n    callbackFunction = (childData) => {\n\n        this.props.teams[this.state.teamId].content = parseInt(childData.value)\n\n\n        const newState2 = {\n            ...this.state,\n            teamName: teamData[parseInt(childData.value)].name,\n            teamColor: teamData[parseInt(childData.value)].color\n        }\n\n        //this.props.teams.setState(newState)\n        this.setState(newState2)\n        console.log(this.props.teams)\n\n       /* this.setState({\n            ...this.state,\n            teamId: {\n\n\n\n            }\n        });\n        */\n\n        console.log(this.state.teamId)\n    }\n\n\n\n    render() {\n\n        return (\n            <Draggable draggableId={this.props.id} index={this.props.index}>\n                {(provided, snapshot) => (\n\n                    <StyledCard\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        innerRef={provided.innerRef}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}>\n                        <Card.Header><TeamModal teamName={this.state.teamName} teamId={this.props.value} \n                        index={this.props.index}\n                        parentCallback={this.callbackFunction}\n                        >{this.state.teamName}</TeamModal></Card.Header>\n                        <ColoredCardBody teamColor={this.state.teamColor}>\n                            <Card.Text> Pick #:{this.props.index + 1} </Card.Text>\n                        </ColoredCardBody>\n                    </StyledCard>\n                )\n                }\n            </Draggable>\n        )\n    }\n\n}","import React from 'react';\n//import Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport TeamCard from './teamCard';\nimport { Droppable } from 'react-beautiful-dnd';\n\n\nconst Container = styled.div`\n    \n    border: 1px solid lightgrey;\n    width: 50%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n \n`;\n\nconst Title = styled.div`\n\n    width: auto;\n    font-weight: bold;\n`;\n\nconst DraftList = styled.div`\n    border: black;\n    padding: 2px;\n    margin: 1%;\n    overflow-y: scroll;\n    height: 450px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? 'lightgray' : 'white')};\n`;\n\n\n\nexport default class TeamColumn extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: this.props.teamIds\n\n        }\n        //alert(this.state.teamIds)\n    }\n\n    render() {\n\n        return (\n\n            <Container>\n\n                <Title>{this.props.column.title}</Title>\n\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <DraftList\n                            innerRef = {provided.innerRef}\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver = {snapshot.isDraggingOver}\n                        >\n                            {this.props.teamIds.map((value, index) => (\n                                \n                                <TeamCard key={value} id={value} value={value} index={index} teams={this.props.teams}/>\n                            ))}\n                            {provided.placeholder}\n                        </DraftList>\n\n                    )\n                    }\n\n                </Droppable>\n            </Container>\n        )\n\n    }\n\n\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport './teamCard.css';\n\n\nconst StyledCard = styled(Card) `\n    \n\n    color: white;\n    background-color: #92a8d1;\n\tfont-size: 1em;\n\t\n    height: 70px;\n\n\tborder: 2px solid palevioletred;\n\tborder-radius: 3px;\n    margin-bottom: 7%;\n`;\n\nconst StyledCardHeader = styled(Card.Header) `\n    color: black;\n\n`;\n\nconst StyledCardBody = styled.div`\n\n    background-color: ${props => props.color}\n`;\n\n\nexport default class PlayerCard extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n\n        //console.log(props.value)\n        const playerId = props.playerId\n        //console.log(props.teams[props.value])\n        console.log(props.players[props.id].content)\n        this.state = {\n            id: props.id,\n            playerId:  props.playerId,\n            playerName:  props.players[props.id]['content'],\n            pos: props.players[props.id]['pos']\n            //teamColor: teamData[props.teams[teamId].content].color\n            //teamLink: null,\n            //teamImage: null\n        }\n\n    }\n\n    render() {\n\n        return (\n\n            <Draggable draggableId={this.props.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <StyledCard\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        innerRef={provided.innerRef}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}>\n                        <StyledCardHeader>{this.state.playerName}</StyledCardHeader>\n                        <StyledCardBody color={this.props.color}>\n                         <Card.Text>{this.state.pos}</Card.Text>\n                        </StyledCardBody>\n                    </StyledCard>\n                )\n                }\n            </Draggable>\n\n\n        )\n\n\n    }\n\n}","import React from 'react';\n//import Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport PlayerCard from './playerCard';\nimport teamData from './team-data'\nimport { Droppable } from 'react-beautiful-dnd';\n\n\nconst Container = styled.div`\n    \n    border: 1px solid lightgrey;\n    width: 25%;\n    \n    text-align: center;\n    \n`;\n\nconst Title = styled.div`\n\n    width: auto;\n    font-weight: bold;\n`;\n\nconst PlayerList = styled.div`\n    border: black;\n    padding: 2px;\n    margin: 1%;\n    overflow-y: scroll;\n    height: 450px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? !props.players.includes(props.draggingOverWith) ? 'lightcoral' : 'lightgreen' : 'white')};\n    flex-grow: 1;\n`;\n\n\nexport default class PlayerColumn extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: this.props.playerIds\n\n        }\n    }\n    render() {\n\n\n        return (\n            <Container>\n                <Title>{this.props.column.title}</Title>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <PlayerList\n                            innerRef={provided.innerRef}\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                            draggingOverWith={snapshot.draggingOverWith}\n                            players={this.props.allPlayerIds} >\n                            {this.props.column.playerIds.map((value, index) => (\n                                //This is for setting the color of the draft pick to the corresponding team\n                                <PlayerCard key={value} id={value} playerId={value} players={this.props.players} index={index}\n                                color={teamData[this.props.teams[this.props.teamColumn.teamIds[index]].content].color} />\n\n                            ))}\n                            {provided.placeholder}\n                        </PlayerList>\n                    )\n                    }\n                </Droppable>\n\n\n            </Container>\n\n        )\n\n    }\n}\n\n\n\n","import React from 'react';\n//import Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport PlayerCard from './playerCard';\n\nconst Container = styled.div`\n    \n    border: 1px solid lightgrey;\n    width: 25%;\n    \n    text-align: center;\n    \n`;\n\nconst Title = styled.div`\n\n    width: auto;\n    font-weight: bold;\n`;\n\nconst PlayerList = styled.div`\n    border: black;\n    padding: 2px;\n    margin: 1%;\n    overflow-y: scroll;\n    height: 450px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? !props.players.includes(props.draggingOverWith) ? 'lightcoral' : 'lightgreen' : 'white')};\n    flex-grow: 1;\n`;\n\nexport default class PlayerPool extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: 'player-pool',\n            title: 'Unselected Players',\n            playerIds: this.props.playerIds\n\n        }\n    }\n    render() {\n\n\n        return (\n            <Container>\n                <Title>{this.props.column.title}</Title>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <PlayerList\n                            innerRef={provided.innerRef}\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                            draggingOverWith={snapshot.draggingOverWith}\n                            players={this.props.allPlayerIds}>\n                            {this.props.column.playerIds.map((value, index) => (\n\n                                <PlayerCard key={value} id={value} playerId={value} players={this.props.players} index={index} \n                                    color=\"DimGrey\"\n                                />\n\n                            ))}\n                            {provided.placeholder}\n                        </PlayerList>\n                    )\n                    }\n                </Droppable>\n            </Container>\n\n        )\n\n    }\n\n}","import playerFile2 from './testPlayers.json'\n\n\nvar request = new XMLHttpRequest();\nrequest.open(\"GET\", \"./data/players.json\", false);\nrequest.send(null)\n\nconst initialData = {\n\n    'teams': {\n        'team-1': { id: 'team-1', content: 1 }\n    },\n\n    'players': playerFile2['players'],\n\n\n    /*{\n\n        'Joe-Burrow': { id: 'Joe-Burrow', content: 'Joe Burrow', pos: 'Quarterback', school: 'LSU' },\n        'Chase-Young': { id: 'Chase-Young', content: 'Chase Young', pos: 'Edge', school: 'OSU' },\n        'Tua-T': { id: 'Tua-T', content: 'Tua T', pos: 'Quarterback', school: 'Alabama' }\n\n    }, */\n\n    //'allPlayerIds': ['Joe-Burrow', 'Chase-Young', 'Tua-T', 'Jeffrey-Okudah', 'Derrick-Brown', 'Andrew-Thomas', 'Isaiah-Simmons'],\n\n    allPlayerIds: playerFile2['ids'],\n\n    columns: {\n        'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: null\n        },\n\n        'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n        },\n\n        'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: ['Joe-Burrow', 'Chase-Young', 'Tua-T']\n        }\n    },\n\n    columnOrder: ['team-column', 'player-column', 'player-pool'],\n\n    draftOrder: [6, 31, 10, 22, 18, 16, 4, 0, 14, 7, 23, 24, 13, 29, 9, 1, 8,\n        18, 24, 14, 25, 3, 20, 21, 19, 18, 28, 2, 30, 11, 27, 15]\n\n}\n\nexport default initialData;","import React from 'react';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport './css/Mock.css';\nimport TeamColumn from './TeamColumn';\nimport PlayerColumn from './PlayerColumn';\nimport PlayerPool from './PlayerPool';\nimport initialData from './initial-data.js';\nimport styled from 'styled-components';\nimport PlayersFile from './players.json';\n\n\nconst DraftTable = styled.div`\n    display: flex;\n    width: 80%;\n    margin: auto;\n    overflow-y: scroll;\n`;\n\n\n\nexport default class Mock extends React.Component {\n\n    state = initialData;\n\n    sendData = (playerColumnIds) => {\n        //console.log(this.state.columns['player-column'].playerIds)\n        //console.log(this.state.columns['player-pool'].playerIds)\n        this.props.parentCallback({\n            ids: this.state.columns['team-column'].teamIds,\n            teams: this.state.teams,\n            pickedPlayers: playerColumnIds,\n            players: this.state.players\n        });\n\n    }\n\n    constructor(props) {\n        super(props)\n\n        let defaultOrder = {};\n        let filledTeamIds = []\n\n        var counter = 0;\n\n        initialData.draftOrder.map(function (value) {\n\n            defaultOrder['team-' + counter] = (\n                {\n                    id: 'team-' + counter,\n                    content: value\n                }\n            )\n\n            filledTeamIds.push('team-' + counter)\n            counter++;\n        }\n        )\n\n\n\n        const allPlayers = {}\n\n        console.log(PlayersFile['players']['Tua-T'])\n\n        this.state = {\n            ...this.state,\n            teams: defaultOrder,\n            columns: {\n                ...this.state.columns,\n                'team-column': {\n                    ...this.state.columns['team-column'],\n                    teamIds: filledTeamIds\n                },\n                'player-pool': {\n                    ...this.state.columns['player-pool'],\n                    playerIds: this.state.allPlayerIds\n                }\n            }\n        }\n\n        this.sendData(this.state.columns['player-column'].playerIds)\n\n    }\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result;\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n            return;\n        }\n\n        if (source.droppableId === \"team-column\" && destination.droppableId !== \"team-column\" ||\n            source.droppableId !== \"team-column\" && destination.droppableId === \"team-column\") {\n            return;\n        }\n\n        if (source.droppableId === \"team-column\" && destination.droppableId === \"team-column\") {\n            //For the team order\n            const column = this.state.columns[source.droppableId];\n            const newTeamIds = Array.from(column.teamIds)\n\n            newTeamIds.splice(source.index, 1)\n            newTeamIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ...column,\n                teamIds: newTeamIds,\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n\n            this.setState(newState)\n            this.sendData(this.state.columns['player-column'].playerIds)\n            //console.log(this.state.teams)\n        } else {\n            //For the players\n            const startColumn = this.state.columns[source.droppableId];\n            const finishColumn = this.state.columns[destination.droppableId];\n\n\n            if (startColumn === finishColumn) { //If in the same column\n                const column = startColumn;\n                const newPlayerIds = Array.from(column.playerIds)\n\n                newPlayerIds.splice(source.index, 1)\n                newPlayerIds.splice(destination.index, 0, draggableId)\n\n                const newColumn = {\n                    ...column,\n                    playerIds: newPlayerIds,\n                };\n\n                const newState = {\n                    ...this.state,\n                    columns: {\n                        ...this.state.columns,\n                        [newColumn.id]: newColumn\n                    },\n                };\n                this.setState(newState)\n                this.sendData(this.state.columns['player-column'].playerIds)\n\n\n            } else {\n                // if to different column\n\n                if (finishColumn.id === 'player-column' && finishColumn.playerIds.length >= this.state.columns[\"team-column\"].teamIds.length) {\n                    console.log('full draft')\n                    return\n                }\n\n                const startPlayerIds = Array.from(startColumn.playerIds)\n                startPlayerIds.splice(source.index, 1)\n                const finishPlayerIds = Array.from(finishColumn.playerIds)\n                finishPlayerIds.splice(destination.index, 0, draggableId)\n\n                const newStartColumn = {\n                    ...startColumn,\n                    playerIds: startPlayerIds,\n                };\n\n                const newFinishColumn = {\n                    ...finishColumn,\n                    playerIds: finishPlayerIds\n                };\n\n                const newAltState = {\n                    ...this.state,\n                    columns: {\n                        ...this.state.columns,\n                        [newStartColumn.id]: newStartColumn,\n                        [newFinishColumn.id]: newFinishColumn\n                    },\n\n                };\n                this.setState(newAltState);\n\n                this.sendData(newAltState.columns['player-column'].playerIds)\n\n            }\n        }\n\n        //console.log(PlayersFile['players']['Tua-T'].content)\n\n\n    }\n    render() {\n\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <DraftTable>\n                    {this.state.columnOrder.map(columnId => {\n                        //alert(columnId)\n                        const teamColumn = this.state.columns[columnId];\n\n                        //alert(teamColumn.id)\n                        if (columnId === 'team-column') {\n                            const teams = this.state.teams;\n                            const actualTeams = teamColumn.teamIds;\n                            //const teamIds = teams.map(teamId => this.state.teams)\n                            //teamColumn.teamIds = Array(teams);\n\n                            return <TeamColumn key={teamColumn.id} title=\"Teams\" teamIds={actualTeams} column={teamColumn} teams={teams} />\n                        }\n\n                        if (columnId === 'player-column') {\n                            //const players = this.state.players;\n                            const players = this.state.players;\n                            const pickedPlayers = teamColumn.playerIds;\n\n                            return <PlayerColumn key={teamColumn.id} playerIds={pickedPlayers} column={teamColumn}\n                                players={players} allPlayerIds={this.state.allPlayerIds} teamColumn={this.state.columns['team-column']}\n                                teams={this.state.teams} />\n                        }\n\n                        if (columnId === 'player-pool') {\n                            const players = this.state.players;\n                            const unpickedPlayers = teamColumn.playerIds;\n                            return <PlayerPool key={teamColumn.id} playerIds={unpickedPlayers} column={teamColumn} players={players} allPlayerIds={this.state.allPlayerIds} />\n                        }\n\n                    })\n                    }\n                </DraftTable>\n\n            </DragDropContext>\n\n        );\n    }\n}\n","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler'\n\n\n\nfunction draftText(teams) {\n\n    return DraftCompiler(teams)\n\n}\n\nexport default function ShareModal(props) {\n\n    let draftOutput = draftText(props.teamInfo)\n    \n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n        \n        setShow(true);\n        \n        draftOutput = draftText(props.teamInfo);\n        console.log(draftOutput)\n    }\n\n    return (\n        <>\n        <Button onClick={handleShow} variant=\"danger\">Share</Button>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton><Modal.Title>Shareable List:</Modal.Title></Modal.Header>\n            <Modal.Body>\n            <Form.Control as=\"textarea\" rows=\"18\" defaultValue={draftOutput}>\n             \n            </Form.Control>\n            </Modal.Body>\n        </Modal>\n\n        </>\n    );\n\n\n\n\n\n\n}","import teamData from './team-data';\n\nexport default function DraftCompiler(draftInfo) {\n\n    var text = \"\"\n\n    //console.log(draftInfo.pickedPlayers.length)\n    if (draftInfo.ids != null) {\n        var redditFormat = \"-------REDDIT FORMAT-------------\\n\\n\"\n        draftInfo.ids.map((value, index) => {\n\n            let newLine = teamData[draftInfo.teams[value].content].name\n\n            let playerId = draftInfo.pickedPlayers[index]\n            //console.log(playerId)\n            var chosenPick = \"--Not Selected--\"\n            var position = \"\"\n            var school = \"\"\n            if (playerId != null) {\n                chosenPick = draftInfo.players[playerId].content\n                position = draftInfo.players[playerId].pos\n                school = draftInfo.players[playerId].school\n            }\n\n            redditFormat +=  \"**\" + (index+1) + \"**.\\t**\" + newLine + \"** - **\" + chosenPick + \"**, *\" + position + \"-\" + school + \"*\\n\\n\";\n\n        })\n\n\n        text += redditFormat;\n\n        return text;\n\n    }\n\n\n}","import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport logo from './images/yellow_brown_logo.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nclass Top extends React.Component {\n\n\n  state = { message: \"\" }\n  callbackFunction = (childData) => { this.setState({ message: childData }) }\n\n  //handleChange = val => setValue(val);\n\n\n\n  render() {\n\n\n\n    return (\n\n      <Container>\n\n        <div className=\"Header\">\n        \n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\"/>Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        <Mock parentCallback={this.callbackFunction} />\n\n\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport {\n    BrowserView,\n    MobileView\n  } from \"react-device-detect\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<><BrowserView><App /> </BrowserView> <MobileView>Sorry, there is currently no mobile support for this app ☹️</MobileView></>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/yellow_brown_logo.58018991.png\";"],"sourceRoot":""}