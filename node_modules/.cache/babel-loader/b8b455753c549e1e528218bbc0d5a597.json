{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/playerCard.jsx\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport './teamCard.css';\nconst StyledCard = styled(Card)`\n    \n\n    color: white;\n    background-color: #92a8d1;\n\tfont-size: 1em;\n\t\n    height: 70px;\n\n\tborder: 2px solid palevioletred;\n\tborder-radius: 3px;\n    margin-bottom: 7%;\n`;\nconst StyledCardHeader = styled(Card.Header)`\n    color: black;\n\n`;\nconst StyledCardBody = styled.div`\n\n    background-color: ${props => props.color}\n`;\nexport default class PlayerCard extends React.Component {\n  constructor(props) {\n    super(props); //console.log(props.value)\n\n    const playerId = props.playerId; //console.log(props.teams[props.value])\n    //console.log(props.players[props.id].content)\n\n    this.state = {\n      id: props.id,\n      playerId: props.playerId,\n      playerName: props.players[props.id]['content'],\n      pos: props.players[props.id]['pos'] //teamColor: teamData[props.teams[teamId].content].color\n      //teamLink: null,\n      //teamImage: null\n\n    };\n  }\n\n  render() {\n    return React.createElement(Draggable, {\n      draggableId: this.props.id,\n      index: this.props.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(StyledCard, Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      innerRef: provided.innerRef,\n      ref: provided.innerRef,\n      isDragging: snapshot.isDragging,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(StyledCardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.playerName), React.createElement(StyledCardBody, {\n      color: this.props.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.pos))));\n  }\n\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/playerCard.jsx"],"names":["React","Card","styled","Draggable","StyledCard","StyledCardHeader","Header","StyledCardBody","div","props","color","PlayerCard","Component","constructor","playerId","state","id","playerName","players","pos","render","index","provided","snapshot","draggableProps","dragHandleProps","innerRef","isDragging"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,gBAAP;AAGA,MAAMC,UAAU,GAAGF,MAAM,CAACD,IAAD,CAAQ;;;;;;;;;;;;CAAjC;AAcA,MAAMI,gBAAgB,GAAGH,MAAM,CAACD,IAAI,CAACK,MAAN,CAAe;;;CAA9C;AAKA,MAAMC,cAAc,GAAGL,MAAM,CAACM,GAAI;;wBAEVC,KAAK,IAAIA,KAAK,CAACC,KAAM;CAF7C;AAMA,eAAe,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAGpDC,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,UAAMK,QAAQ,GAAGL,KAAK,CAACK,QAAvB,CAJe,CAKf;AACA;;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAEP,KAAK,CAACO,EADD;AAETF,MAAAA,QAAQ,EAAGL,KAAK,CAACK,QAFR;AAGTG,MAAAA,UAAU,EAAGR,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACO,EAApB,EAAwB,SAAxB,CAHJ;AAITG,MAAAA,GAAG,EAAEV,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACO,EAApB,EAAwB,KAAxB,CAJI,CAKT;AACA;AACA;;AAPS,KAAb;AAUH;;AAEDI,EAAAA,MAAM,GAAG;AAEL,WAEI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWO,EAAnC;AAAuC,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWY,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACC,QAAD,EAAWC,QAAX,KACG,oBAAC,UAAD,oBACQD,QAAQ,CAACE,cADjB,EAEQF,QAAQ,CAACG,eAFjB;AAGI,MAAA,QAAQ,EAAEH,QAAQ,CAACI,QAHvB;AAII,MAAA,GAAG,EAAEJ,QAAQ,CAACI,QAJlB;AAKI,MAAA,UAAU,EAAEH,QAAQ,CAACI,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmB,KAAKZ,KAAL,CAAWE,UAA9B,CANJ,EAOI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY,KAAKK,KAAL,CAAWI,GAAvB,CADD,CAPJ,CAFR,CAFJ;AAuBH;;AAhDmD","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport { Draggable } from \"react-beautiful-dnd\";\nimport './teamCard.css';\n\n\nconst StyledCard = styled(Card) `\n    \n\n    color: white;\n    background-color: #92a8d1;\n\tfont-size: 1em;\n\t\n    height: 70px;\n\n\tborder: 2px solid palevioletred;\n\tborder-radius: 3px;\n    margin-bottom: 7%;\n`;\n\nconst StyledCardHeader = styled(Card.Header) `\n    color: black;\n\n`;\n\nconst StyledCardBody = styled.div`\n\n    background-color: ${props => props.color}\n`;\n\n\nexport default class PlayerCard extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n\n        //console.log(props.value)\n        const playerId = props.playerId\n        //console.log(props.teams[props.value])\n        //console.log(props.players[props.id].content)\n        \n        this.state = {\n            id: props.id,\n            playerId:  props.playerId,\n            playerName:  props.players[props.id]['content'],\n            pos: props.players[props.id]['pos']\n            //teamColor: teamData[props.teams[teamId].content].color\n            //teamLink: null,\n            //teamImage: null\n        }\n\n    }\n\n    render() {\n\n        return (\n\n            <Draggable draggableId={this.props.id} index={this.props.index}>\n                {(provided, snapshot) => (\n                    <StyledCard\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        innerRef={provided.innerRef}\n                        ref={provided.innerRef}\n                        isDragging={snapshot.isDragging}>\n                        <StyledCardHeader>{this.state.playerName}</StyledCardHeader>\n                        <StyledCardBody color={this.props.color}>\n                         <Card.Text>{this.state.pos}</Card.Text>\n                        </StyledCardBody>\n                    </StyledCard>\n                )\n                }\n            </Draggable>\n\n\n        )\n\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}