{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n    integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n    crossorigin: \"anonymous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    color: \"lightgrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"developed by Avery Higgins, 2020\"));\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n  return React.createElement(Mock, {\n    parentCallback: callbackFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nclass Top extends React.Component {\n  //handleChange = val => setValue(val);\n  constructor() {\n    super();\n    this.state = {\n      prevArrow: false,\n      nextArrow: false,\n      mocks: [],\n      currentMock: 0,\n      message: \"\",\n      currentMockObj: null\n    };\n\n    this.callbackFunction = childData => {\n      this.setState({ ...this.state,\n        message: childData\n      });\n    };\n\n    this.addMockPage = () => {\n      this.state.mocks.push({\n        'teams': {},\n        'players': {},\n        allPlayerIds: playerFile2['ids'],\n        columns: {\n          'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: []\n          },\n          'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n          },\n          'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: []\n          }\n        },\n        columnOrder: ['team-column', 'player-column', 'player-pool']\n      });\n    };\n\n    this.state.mocks[0] = initialData;\n    let defaultOrder = {};\n    let filledTeamIds = [];\n    var counter = 0;\n    initialData.draftOrder[0].map(function (value) {\n      defaultOrder['team-' + counter] = {\n        id: 'team-' + counter,\n        content: value\n      };\n      filledTeamIds.push('team-' + counter);\n      counter++;\n    });\n    const allPlayers = {};\n    this.state.mocks[0] = { ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: { ...this.state.mocks[0].columns,\n        'team-column': { ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': { ...this.state.mocks[0].columns['player-pool'],\n          playerIds: initialData.allPlayerIds\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), \"Mocker\"), React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"pages\",\n      size: \"lg\",\n      defaultValue: \"Create\",\n      className: \"btnGrp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"About\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"About\"), React.createElement(ShareModal, {\n      teamInfo: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Share\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Share\"), \" \"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Create\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Create\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Load\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Load\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"More\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"More\"))), //createMockTable(this.mocks, this.mockIndex, this.callbackFunction)\n    this.state.mocks.map((mock, index) => {\n      if (index === this.state.currentMock) {\n        this.state.currentMockObj = React.createElement(Mock, {\n          parentCallback: this.callbackFunction,\n          mockPage: this.state.mocks[index],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        });\n        return this.state.currentMockObj; //return <Mock parentCallback={this.callbackFunction} mockPage={this.state.mocks[index]} />\n      }\n    }), React.createElement(Button, {\n      disabled: !this.state.prevArrow,\n      onClick: () => {\n        this.state.currentMock--;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\u2039\"), React.createElement(Button, {\n      onClick: () => {\n        console.log(this.state.currentMock);\n        this.addMockPage();\n        this.state.prevArrow = true;\n        this.state.currentMock++;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      disabled: !this.state.nextArrow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"\\u203A\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js"],"names":["React","Mock","Container","ToggleButtonGroup","ToggleButton","ShareModal","Button","logo","initialData","playerFile2","App","createMockTable","mocks","mockIndex","callbackFunction","Top","Component","constructor","state","prevArrow","nextArrow","currentMock","message","currentMockObj","childData","setState","addMockPage","push","allPlayerIds","columns","id","title","teamIds","playerIds","columnOrder","defaultOrder","filledTeamIds","counter","draftOrder","map","value","content","allPlayers","teams","render","mock","index","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n\n  return (<Mock parentCallback={callbackFunction} />);\n}\n\nclass Top extends React.Component {\n\n\n  state = {\n    prevArrow: false,\n    nextArrow: false,\n    mocks: [],\n    currentMock: 0,\n    message: \"\",\n    currentMockObj: null\n  }\n\n  callbackFunction = (childData) => { this.setState({ ...this.state, message: childData }) }\n\n  //handleChange = val => setValue(val);\n\n  addMockPage = () => {\n    this.state.mocks.push(\n      {\n        'teams': {},\n        'players': {},\n        allPlayerIds: playerFile2['ids'],\n\n        columns: {\n          'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: []\n          },\n\n          'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n          },\n\n          'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: []\n          }\n        },\n\n        columnOrder: ['team-column', 'player-column', 'player-pool']\n\n      }\n\n    )\n\n  }\n\n\n  constructor() {\n    super()\n    this.state.mocks[0] = initialData\n\n    let defaultOrder = {};\n    let filledTeamIds = []\n\n    var counter = 0;\n\n    initialData.draftOrder[0].map(function (value) {\n\n      defaultOrder['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds.push('team-' + counter)\n      counter++;\n    }\n    )\n\n    const allPlayers = {}\n\n    this.state.mocks[0] = {\n      ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: {\n        ...this.state.mocks[0].columns,\n        'team-column': {\n          ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': {\n          ...this.state.mocks[0].columns['player-pool'],\n          playerIds: initialData.allPlayerIds\n        }\n      }\n    }\n\n\n\n  }\n\n\n  render() {\n\n    return (\n\n      <Container>\n\n        <div className=\"Header\">\n\n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\" />Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        { //createMockTable(this.mocks, this.mockIndex, this.callbackFunction)\n          this.state.mocks.map((mock, index) => {\n\n            if (index === this.state.currentMock) {\n\n              this.state.currentMockObj = <Mock parentCallback={this.callbackFunction} mockPage={this.state.mocks[index]} />\n              return this.state.currentMockObj\n              //return <Mock parentCallback={this.callbackFunction} mockPage={this.state.mocks[index]} />\n            }\n\n\n          })\n        }\n\n        <Button disabled={!this.state.prevArrow} onClick={() => {\n          this.state.currentMock--\n\n        }}>&#8249;</Button>\n\n        <Button onClick={() => {\n          console.log(this.state.currentMock)\n          this.addMockPage()\n          this.state.prevArrow = true\n          this.state.currentMock++\n          \n        }}>+</Button>\n\n        <Button disabled={!this.state.nextArrow}>&#8250;</Button>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}