{"ast":null,"code":"import teamData from './team-data';\nexport default function DraftCompiler(draftInfo) {\n  var text = \"\";\n\n  if (draftInfo.ids != null) {\n    var redditFormat = \"-------REDDIT FORMAT-------------\\n\\n\";\n    var shareableFormat = \"---------Shareable Binary---------\\n\\n\";\n    var convertText = \"\";\n    var excelFormat = \"-------------EXCEL FORMAT-------------\\n\\n\";\n    var columns = \"Number, Team, Name, Position, School\\n\";\n    excelFormat += columns;\n    draftInfo.ids.map((value, index) => {\n      let newLine = teamData[draftInfo.teams[value].content].name; //team name\n\n      let playerId = draftInfo.pickedPlayers[index]; //Player id\n\n      var chosenPick = \"--Not Selected--\";\n      var position = \"\";\n      var school = \"\";\n\n      if (playerId != null) {\n        chosenPick = draftInfo.players[playerId].content; //name set\n\n        position = draftInfo.players[playerId].pos; //position set\n\n        school = draftInfo.players[playerId].school; // school set\n      }\n\n      redditFormat += \"**\" + (index + 1) + \"**.\\t**\" + newLine + \"** - **\" + chosenPick + \"**, *\" + position + \"-\" + school + \"*\\n\\n\";\n      excelFormat += index + 1 + \",\" + newLine + \",\" + chosenPick + \",\" + position + \",\" + school + \"\\n\";\n      convertText += draftInfo.teams[value].content + '-' + playerId + \":\";\n    });\n    text += redditFormat;\n    text += excelFormat; //var testStr = \"THIS IS A HUGE TEST\";\n\n    text += shareableFormat;\n    var testConvert = btoa(draftInfo);\n    console.log(draftInfo);\n    console.log(testConvert);\n    text += testConvert;\n    var testUncovert = atob(testConvert);\n    console.log(testUncovert);\n    text += testUncovert;\n    return text;\n  }\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/DraftCompiler.jsx"],"names":["teamData","DraftCompiler","draftInfo","text","ids","redditFormat","shareableFormat","convertText","excelFormat","columns","map","value","index","newLine","teams","content","name","playerId","pickedPlayers","chosenPick","position","school","players","pos","testConvert","btoa","console","log","testUncovert","atob"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,eAAe,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAE7C,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAID,SAAS,CAACE,GAAV,IAAiB,IAArB,EAA2B;AACvB,QAAIC,YAAY,GAAG,uCAAnB;AAEA,QAAIC,eAAe,GAAG,wCAAtB;AACA,QAAIC,WAAW,GAAG,EAAlB;AAEA,QAAIC,WAAW,GAAG,4CAAlB;AACA,QAAIC,OAAO,GAAG,wCAAd;AACAD,IAAAA,WAAW,IAAIC,OAAf;AAEAP,IAAAA,SAAS,CAACE,GAAV,CAAcM,GAAd,CAAmB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEjC,UAAIC,OAAO,GAAGb,QAAQ,CAACE,SAAS,CAACY,KAAV,CAAgBH,KAAhB,EAAuBI,OAAxB,CAAR,CAAyCC,IAAvD,CAFiC,CAE+B;;AAEhE,UAAIC,QAAQ,GAAGf,SAAS,CAACgB,aAAV,CAAwBN,KAAxB,CAAf,CAJiC,CAImB;;AACpD,UAAIO,UAAU,GAAG,kBAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAIJ,QAAQ,IAAI,IAAhB,EAAsB;AAClBE,QAAAA,UAAU,GAAGjB,SAAS,CAACoB,OAAV,CAAkBL,QAAlB,EAA4BF,OAAzC,CADkB,CACsC;;AACxDK,QAAAA,QAAQ,GAAGlB,SAAS,CAACoB,OAAV,CAAkBL,QAAlB,EAA4BM,GAAvC,CAFkB,CAEsC;;AACxDF,QAAAA,MAAM,GAAGnB,SAAS,CAACoB,OAAV,CAAkBL,QAAlB,EAA4BI,MAArC,CAHkB,CAGsC;AAC3D;;AAEDhB,MAAAA,YAAY,IAAK,QAAQO,KAAK,GAAC,CAAd,IAAmB,SAAnB,GAA+BC,OAA/B,GAAyC,SAAzC,GAAqDM,UAArD,GAAkE,OAAlE,GAA4EC,QAA5E,GAAuF,GAAvF,GAA6FC,MAA7F,GAAsG,OAAvH;AAEAb,MAAAA,WAAW,IAAMI,KAAK,GAAC,CAAP,GAAY,GAAZ,GAAkBC,OAAlB,GAA4B,GAA5B,GAAkCM,UAAlC,GAA+C,GAA/C,GAAqDC,QAArD,GAAgE,GAAhE,GAAsEC,MAAtE,GAA+E,IAA/F;AAEAd,MAAAA,WAAW,IAAIL,SAAS,CAACY,KAAV,CAAgBH,KAAhB,EAAuBI,OAAvB,GAAiC,GAAjC,GAAuCE,QAAvC,GAAkD,GAAjE;AAEH,KApBD;AAsBAd,IAAAA,IAAI,IAAIE,YAAR;AACAF,IAAAA,IAAI,IAAIK,WAAR,CAjCuB,CAkCvB;;AACAL,IAAAA,IAAI,IAAIG,eAAR;AAGA,QAAIkB,WAAW,GAAGC,IAAI,CAACvB,SAAD,CAAtB;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,SAAZ;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACArB,IAAAA,IAAI,IAAIqB,WAAR;AAEA,QAAII,YAAY,GAAGC,IAAI,CAACL,WAAD,CAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAzB,IAAAA,IAAI,IAAIyB,YAAR;AAEA,WAAOzB,IAAP;AAEH;AAGJ","sourcesContent":["import teamData from './team-data';\n\nexport default function DraftCompiler(draftInfo) {\n\n    var text = \"\"\n\n    if (draftInfo.ids != null) {\n        var redditFormat = \"-------REDDIT FORMAT-------------\\n\\n\"\n\n        var shareableFormat = \"---------Shareable Binary---------\\n\\n\"\n        var convertText = \"\"\n\n        var excelFormat = \"-------------EXCEL FORMAT-------------\\n\\n\"\n        var columns = \"Number, Team, Name, Position, School\\n\"\n        excelFormat += columns;\n\n        draftInfo.ids.map( (value, index) => {\n\n            let newLine = teamData[draftInfo.teams[value].content].name     //team name\n\n            let playerId = draftInfo.pickedPlayers[index]       //Player id\n            var chosenPick = \"--Not Selected--\"\n            var position = \"\"\n            var school = \"\"\n            if (playerId != null) {\n                chosenPick = draftInfo.players[playerId].content        //name set\n                position = draftInfo.players[playerId].pos              //position set\n                school = draftInfo.players[playerId].school             // school set\n            }\n\n            redditFormat +=  \"**\" + (index+1) + \"**.\\t**\" + newLine + \"** - **\" + chosenPick + \"**, *\" + position + \"-\" + school + \"*\\n\\n\";\n\n            excelFormat +=  (index+1) + \",\" + newLine + \",\" + chosenPick + \",\" + position + \",\" + school + \"\\n\";\n            \n            convertText += draftInfo.teams[value].content + '-' + playerId + \":\";\n\n        })\n\n        text += redditFormat;\n        text += excelFormat;\n        //var testStr = \"THIS IS A HUGE TEST\";\n        text += shareableFormat;\n\n        \n        var testConvert = btoa(draftInfo);\n        console.log(draftInfo);\n        console.log(testConvert);\n        text += testConvert;\n\n        var testUncovert = atob(testConvert);\n        console.log(testUncovert);\n        text += testUncovert;\n\n        return text;\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}