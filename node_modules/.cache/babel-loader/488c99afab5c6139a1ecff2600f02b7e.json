{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n    integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n    crossorigin: \"anonymous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    color: \"lightgrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"developed by Avery Higgins, 2020\"));\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n  return React.createElement(Mock, {\n    parentCallback: callbackFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nclass Top extends React.Component {\n  //handleChange = val => setValue(val);\n  addMockPage() {\n    let index = this.state.totalRounds;\n    this.state.totalRounds++; //console.log(index)\n\n    let filledTeamIds2 = [];\n    let defaultOrder2 = {};\n    var counter = 32 * index;\n    initialData.draftOrder[index].map(function (value) {\n      defaultOrder2['team-' + counter] = {\n        id: 'team-' + counter,\n        content: value\n      };\n      filledTeamIds2.push('team-' + counter);\n      counter++;\n    }); //console.log(filledTeamIds)\n    //this.state.globalPlayerPool = initialData.allPlayerIds\n\n    this.state.mocks[index] = {\n      'teams': defaultOrder2,\n      'players': initialData.players,\n      allPlayerIds: playerFile2['ids'],\n      columns: {\n        'team-column': {\n          id: 'team-column',\n          title: 'Teams',\n          teamIds: filledTeamIds2\n        },\n        'player-column': {\n          id: 'player-column',\n          title: 'Picked Players',\n          playerIds: []\n        },\n        'player-pool': {\n          id: 'player-pool',\n          title: 'Player Pool',\n          playerIds: this.state.globalPlayerPool\n        }\n      },\n      columnOrder: ['team-column', 'player-column', 'player-pool']\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      prevArrow: false,\n      nextArrow: false,\n      mocks: {},\n      currentMock: 0,\n      totalRounds: 1,\n      message: {\n        ids: [],\n        teams: [],\n        pickedPlayers: [],\n        players: []\n      },\n      currentMockObj: null,\n      globalPlayerPool: {}\n    };\n\n    this.callbackFunction = childData => {// this.setState({ ...this.state, message: childData }) \n    };\n\n    this.changeMockPageData = (newState, index) => {\n      //this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\n      var numIndex = index;\n      this.setState({ ...this.state,\n        globalPlayerPool: newState.columns['player-pool'].playerIds,\n        message: {\n          ids: newState.columns['team-column'].teamIds,\n          teams: newState.teams,\n          pickedPlayers: newState.columns['player-column'].playerIds,\n          players: newState.players\n        },\n        mocks: { ...this.state.mocks,\n          [index]: newState\n        }\n      }, () => console.log(this.state.mocks)); //this.state.globalPlayerPool = (this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds)\n      //console.log(this.state.mocks[index].columns['team-column'].teamIds)\n      //console.log(\"ok\")\n    };\n\n    this.state.mocks[0] = initialData;\n    let defaultOrder = {};\n    let filledTeamIds = [];\n    var counter = 0;\n    this.state.globalPlayerPool = initialData.allPlayerIds;\n    initialData.draftOrder[0].map(function (value) {\n      defaultOrder['team-' + counter] = {\n        id: 'team-' + counter,\n        content: value\n      };\n      filledTeamIds.push('team-' + counter);\n      counter++;\n    });\n    const allPlayers = {};\n    this.state.mocks[0] = { ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: { ...this.state.mocks[0].columns,\n        'team-column': { ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': { ...this.state.mocks[0].columns['player-pool'],\n          playerIds: this.state.globalPlayerPool\n        }\n      }\n    };\n  }\n\n  render() {\n    this.state.prevArrow = this.state.currentMock > 0;\n    this.state.nextArrow = this.state.currentMock < this.state.totalRounds - 1;\n    /*\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    } else {\n      this.state.prevArrow = false;\n    }\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    } {\n     }\n    */\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \"Mocker\"), React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"pages\",\n      size: \"lg\",\n      defaultValue: \"Create\",\n      className: \"btnGrp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"About\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"About\"), React.createElement(ShareModal, {\n      teamInfo: this.state.message,\n      allData: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Share\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Share\"), \" \"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Create\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Create\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Load\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Load\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"More\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"More\"))), React.createElement(Mock, {\n      parentCallback: this.callbackFunction,\n      changeMockCallback: this.changeMockPageData,\n      mockPage: this.state.mocks[this.state.currentMock],\n      mockIndex: this.state.currentMock,\n      teamSetup: this.state.mocks[this.state.currentMock].teams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Round \", this.state.currentMock + 1), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: !this.state.prevArrow,\n      onClick: () => {\n        this.state.currentMock--;\n        this.setState({ ...this.state,\n          //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n          mocks: { ...this.state.mocks,\n            [this.state.currentMock]: { ...this.state.mocks[this.state.currentMock],\n              columns: { ...this.state.mocks[this.state.currentMock].columns,\n                'player-pool': { ...this.state.mocks[this.state.currentMock].columns['player-pool'],\n                  playerIds: this.state.globalPlayerPool\n                }\n              }\n            }\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"\\u2039\"), React.createElement(Button, {\n      onClick: () => {\n        //console.log(this.state.currentMock)\n        this.addMockPage(); //this.state.prevArrow = true\n\n        this.state.currentMock++;\n        this.setState(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      disabled: !this.state.nextArrow,\n      onClick: () => {\n        this.state.currentMock++;\n        this.setState({ ...this.state,\n          //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n          mocks: { ...this.state.mocks,\n            [this.state.currentMock]: { ...this.state.mocks[this.state.currentMock],\n              columns: { ...this.state.mocks[this.state.currentMock].columns,\n                'player-pool': { ...this.state.mocks[this.state.currentMock].columns['player-pool'],\n                  playerIds: this.state.globalPlayerPool\n                }\n              }\n            }\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"\\u203A\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js"],"names":["React","Mock","Container","ToggleButtonGroup","ToggleButton","ShareModal","Button","logo","initialData","playerFile2","App","createMockTable","mocks","mockIndex","callbackFunction","Top","Component","addMockPage","index","state","totalRounds","filledTeamIds2","defaultOrder2","counter","draftOrder","map","value","id","content","push","players","allPlayerIds","columns","title","teamIds","playerIds","globalPlayerPool","columnOrder","constructor","prevArrow","nextArrow","currentMock","message","ids","teams","pickedPlayers","currentMockObj","childData","changeMockPageData","newState","numIndex","setState","console","log","defaultOrder","filledTeamIds","allPlayers","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n\n  return (<Mock parentCallback={callbackFunction} />);\n}\n\nclass Top extends React.Component {\n\n\n  state = {\n    prevArrow: false,\n    nextArrow: false,\n    mocks: {},\n    currentMock: 0,\n    totalRounds: 1,\n    message: {\n      ids: [],\n      teams: [],\n      pickedPlayers: [],\n      players: []\n    },\n    currentMockObj: null,\n    globalPlayerPool: {}\n  }\n\n  callbackFunction = (childData) => { // this.setState({ ...this.state, message: childData }) \n  }\n\n  changeMockPageData = (newState, index) => {\n    //this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\n    var numIndex = index\n\n    this.setState({\n      ...this.state,\n      globalPlayerPool: newState.columns['player-pool'].playerIds,\n      message: {\n        ids: newState.columns['team-column'].teamIds,\n        teams: newState.teams,\n        pickedPlayers: newState.columns['player-column'].playerIds,\n        players: newState.players\n      },\n      mocks: {\n        ...this.state.mocks,\n        [index]: newState\n      }\n\n    }, () => console.log(this.state.mocks))\n\n    //this.state.globalPlayerPool = (this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds)\n\n\n    //console.log(this.state.mocks[index].columns['team-column'].teamIds)\n\n    //console.log(\"ok\")\n  }\n\n  //handleChange = val => setValue(val);\n\n  addMockPage() {\n\n    let index = this.state.totalRounds\n    this.state.totalRounds++;\n    //console.log(index)\n    let filledTeamIds2 = [];\n    let defaultOrder2 = {};\n    var counter = 32 * index;\n\n    initialData.draftOrder[index].map(function (value) {\n\n      defaultOrder2['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds2.push('team-' + counter)\n      counter++;\n    }\n    )\n\n\n\n\n\n    //console.log(filledTeamIds)\n    //this.state.globalPlayerPool = initialData.allPlayerIds\n\n    this.state.mocks[index] =\n      {\n        'teams': defaultOrder2,\n        'players': initialData.players,\n        allPlayerIds: playerFile2['ids'],\n\n        columns: {\n          'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: filledTeamIds2\n          },\n\n          'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n          },\n\n          'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: this.state.globalPlayerPool\n          }\n        },\n\n        columnOrder: ['team-column', 'player-column', 'player-pool']\n\n      }\n\n\n\n\n  }\n\n\n  constructor() {\n    super()\n    this.state.mocks[0] = initialData\n\n    let defaultOrder = {};\n    let filledTeamIds = []\n\n    var counter = 0;\n    this.state.globalPlayerPool = initialData.allPlayerIds\n\n    initialData.draftOrder[0].map(function (value) {\n\n      defaultOrder['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds.push('team-' + counter)\n      counter++;\n    }\n    )\n\n    const allPlayers = {}\n\n    this.state.mocks[0] = {\n      ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: {\n        ...this.state.mocks[0].columns,\n        'team-column': {\n          ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': {\n          ...this.state.mocks[0].columns['player-pool'],\n          playerIds: this.state.globalPlayerPool\n        }\n      }\n    }\n\n\n  }\n\n\n  render() {\n\n    this.state.prevArrow = this.state.currentMock > 0;\n    this.state.nextArrow = this.state.currentMock < this.state.totalRounds - 1;\n\n    /*\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    } else {\n      this.state.prevArrow = false;\n    }\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    } {\n\n    }\n    */\n\n\n    return (\n\n\n      <Container>\n\n        <div className=\"Header\">\n\n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\" />Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message} allData={this.state}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n\n        <Mock parentCallback={this.callbackFunction} changeMockCallback={this.changeMockPageData} mockPage={this.state.mocks[this.state.currentMock]} mockIndex={this.state.currentMock}\n          teamSetup={this.state.mocks[this.state.currentMock].teams} />\n\n        <b>Round {this.state.currentMock + 1}</b><br/>\n\n        <Button disabled={!this.state.prevArrow} onClick={() => {\n\n          this.state.currentMock--\n          this.setState({\n            ...this.state,\n            //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n            mocks: {\n              ...this.state.mocks,\n              [this.state.currentMock]: {\n                ...this.state.mocks[this.state.currentMock],\n                columns: {\n                  ...this.state.mocks[this.state.currentMock].columns,\n                  'player-pool': {\n                    ... this.state.mocks[this.state.currentMock].columns['player-pool'],\n                    playerIds: this.state.globalPlayerPool\n                  }\n                }\n              }\n            }\n          })\n\n\n        }}>&#8249;</Button>\n\n        <Button onClick={() => {\n          //console.log(this.state.currentMock)\n          this.addMockPage()\n          //this.state.prevArrow = true\n          this.state.currentMock++\n          this.setState(this.state)\n\n        }}>+</Button>\n\n        <Button disabled={!this.state.nextArrow} onClick={() => {\n\n          this.state.currentMock++\n          this.setState({\n            ...this.state,\n            //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n            mocks: {\n              ...this.state.mocks,\n              [this.state.currentMock]: {\n                ...this.state.mocks[this.state.currentMock],\n                columns: {\n                  ...this.state.mocks[this.state.currentMock].columns,\n                  'player-pool': {\n                    ... this.state.mocks[this.state.currentMock].columns['player-pool'],\n                    playerIds: this.state.globalPlayerPool\n                  }\n                }\n              }\n            }\n          })\n        }} >&#8250;</Button>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}