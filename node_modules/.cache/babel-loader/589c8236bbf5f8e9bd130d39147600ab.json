{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/LoadModal.jsx\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport styled from 'styled-components';\nconst TinyTextArea = styled(Form.Control)`\n    font-size: 5pt;\n    width: 100%;\n\n`;\n\nfunction loadBinary(callBack, text) {\n  //let objJsonStr = JSON.stringify(stateData);\n  //let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");\n  //console.log(objJsonB64);\n  try {\n    var newState = JSON.parse(atob(text)); //console.log(newState);\n\n    callBack(newState);\n  } catch (err) {\n    alert(\"Incorrect Data\"); //console.log(\"IncorrectFile\");\n  } //console.log(actual);\n\n\n  console.log(newState); //return objJsonB64;\n  //var testConvert = btoa(draftInfo);\n  //return testConvert;\n}\n\nexport default function ShareModal(props) {\n  //let testText = createBinary(props.allData);\n  var textArea;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const copyToClipboard = () => {\n    //textArea.select();\n    // document.execCommand('copy');\n    console.log(props.allData);\n    loadBinary(props.changeMockCallback, textArea.value);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: handleShow,\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Load\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Shareable Data:\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TinyTextArea, {\n    as: \"textarea\",\n    rows: \"50\",\n    ref: textarea => textArea = textarea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: copyToClipboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Load\"))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/LoadModal.jsx"],"names":["React","useState","Modal","Button","Form","styled","TinyTextArea","Control","loadBinary","callBack","text","newState","JSON","parse","atob","err","alert","console","log","ShareModal","props","textArea","show","setShow","handleClose","handleShow","copyToClipboard","allData","changeMockCallback","value","textarea"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACD,IAAI,CAACG,OAAN,CAAe;;;;CAA1C;;AAMA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,IAA9B,EAAoC;AAEhC;AACA;AAEA;AACA,MAAG;AACC,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,IAAD,CAAf,CAAf,CADD,CAEC;;AACAD,IAAAA,QAAQ,CAACE,QAAD,CAAR;AAGH,GAND,CAME,OAAMI,GAAN,EAAU;AACRC,IAAAA,KAAK,CAAC,gBAAD,CAAL,CADQ,CAER;AACH,GAf+B,CAiBhC;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAnBgC,CAoBhC;AAGA;AACA;AAEH;;AAKD,eAAe,SAASQ,UAAT,CAAoBC,KAApB,EAA4B;AAGvC;AACA,MAAIC,QAAJ;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMuB,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAM;AAErBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AAEH,GAJD;;AAMA,QAAMG,eAAe,GAAG,MAAM;AAC3B;AACA;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACO,OAAlB;AACAnB,IAAAA,UAAU,CAACY,KAAK,CAACQ,kBAAP,EAA2BP,QAAQ,CAACQ,KAApC,CAAV;AACF,GALD;;AAOA,SACI,0CACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,UAAjB;AAA6B,IAAA,OAAO,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1B,CADJ,EAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,IAAI,EAAC,IAAjC;AAAsC,IAAA,GAAG,EAAGM,QAAD,IAAcT,QAAQ,GAAGS,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CAFJ,CAFA,CADJ;AAiBH","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport styled from 'styled-components';\n\nconst TinyTextArea = styled(Form.Control)`\n    font-size: 5pt;\n    width: 100%;\n\n`\n\nfunction loadBinary(callBack, text) {\n\n    //let objJsonStr = JSON.stringify(stateData);\n    //let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");\n        \n    //console.log(objJsonB64);\n    try{\n        var newState = JSON.parse(atob(text));\n        //console.log(newState);\n        callBack(newState);\n        \n\n    } catch(err){\n        alert(\"Incorrect Data\")\n        //console.log(\"IncorrectFile\");\n    }\n    \n    //console.log(actual);\n\n    console.log(newState);\n    //return objJsonB64;\n\n\n    //var testConvert = btoa(draftInfo);\n    //return testConvert;\n\n}\n\n\n\n\nexport default function ShareModal(props)  {\n\n\n    //let testText = createBinary(props.allData);\n    var textArea;\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n\n        setShow(true);\n\n    }\n\n    const copyToClipboard = () => {\n       //textArea.select();\n       // document.execCommand('copy');\n       console.log(props.allData)\n       loadBinary(props.changeMockCallback, textArea.value);\n    }\n\n    return (\n        <>\n        <Button onClick={handleShow} variant=\"danger\">Load</Button>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton><Modal.Title>Shareable Data:</Modal.Title></Modal.Header>\n            <Modal.Body>\n                \n                <TinyTextArea as=\"textarea\" rows=\"50\" ref={(textarea) => textArea = textarea}>\n                </TinyTextArea>\n                <Button onClick={copyToClipboard}>Load</Button>\n            </Modal.Body>\n        </Modal>\n        </>\n    );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}