{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/ShareModal.jsx\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler';\n\nfunction draftText(teams) {\n  return DraftCompiler(teams);\n}\n\nfunction setupOrder(props) {\n  let allInfo = props.allData;\n  let totalIds = [];\n  let totalTeams = {};\n  let totalPickedPlayers = [];\n  let totalPlayers = {};\n  var i;\n  var count = 0;\n\n  for (i = 0; i < allInfo.totalRounds; i++) {\n    totalIds = totalIds.concat(allInfo.mocks[i].columns['team-column'].teamIds);\n    totalTeams = Object.assign(totalTeams, allInfo.mocks[i].teams);\n    totalPickedPlayers = totalPickedPlayers.concat(allInfo.mocks[i].columns['player-column'].playerIds);\n    totalPlayers = Object.assign(totalPlayers, allInfo.mocks[i].players);\n  }\n\n  let allRoundInfo = {\n    ids: totalIds,\n    teams: totalTeams,\n    pickedPlayers: totalPickedPlayers,\n    players: totalPlayers\n  };\n  return draftText(allRoundInfo);\n}\n\nexport default function ShareModal(props) {\n  var draftOutput = setupOrder(props); //draftText(props.teamInfo)\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true); //draftOutput = draftText(allRoundInfo);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: handleShow,\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Share\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Shareable List:\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"18\",\n    defaultValue: draftOutput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/ShareModal.jsx"],"names":["React","useState","Modal","Button","Form","DraftCompiler","draftText","teams","setupOrder","props","allInfo","allData","totalIds","totalTeams","totalPickedPlayers","totalPlayers","i","count","totalRounds","concat","mocks","columns","teamIds","Object","assign","playerIds","players","allRoundInfo","ids","pickedPlayers","ShareModal","draftOutput","show","setShow","handleClose","handleShow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler'\n\n\n\nfunction draftText(teams) {\n\n    return DraftCompiler(teams)\n\n}\n\nfunction setupOrder(props) {\n\n    let allInfo = props.allData;\n\n    let totalIds = []\n    let totalTeams = {}\n    let totalPickedPlayers = []\n    let totalPlayers = {}\n\n    var i;\n    var count = 0;\n    for (i = 0; i < allInfo.totalRounds; i++) {\n\n        totalIds = totalIds.concat(allInfo.mocks[i].columns['team-column'].teamIds)\n\n        totalTeams = Object.assign(totalTeams, allInfo.mocks[i].teams)\n        totalPickedPlayers = totalPickedPlayers.concat(allInfo.mocks[i].columns['player-column'].playerIds)\n        totalPlayers = Object.assign(totalPlayers, allInfo.mocks[i].players)\n    }\n\n\n    let allRoundInfo = {\n        ids: totalIds,\n        teams: totalTeams,\n        pickedPlayers: totalPickedPlayers,\n        players: totalPlayers\n    }\n\n    return draftText(allRoundInfo)\n}\n\n\nexport default function ShareModal(props) {\n\n    var draftOutput = setupOrder(props)\n    //draftText(props.teamInfo)\n\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n\n        setShow(true);\n\n        //draftOutput = draftText(allRoundInfo);\n    }\n\n    return (\n        <>\n        <Button onClick={handleShow} variant=\"danger\">Share</Button>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton><Modal.Title>Shareable List:</Modal.Title></Modal.Header>\n            <Modal.Body>\n                <Form.Control as=\"textarea\" rows=\"18\" defaultValue={draftOutput}>\n\n                </Form.Control>\n            </Modal.Body>\n        </Modal>\n\n        </>\n    );\n\n\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}