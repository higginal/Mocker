{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './TeamModal.css';\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n    \n`;\nexport default function TeamModal(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  var state = {\n    value: 0\n  };\n\n  const handleChange = event => {\n    state = {\n      value: event.target.value\n    };\n    console.log(state.value);\n    sendData(); //props.teamId = state.value;\n  }; //TODO: Fix later\n\n\n  const handleSubmit = event => {\n    console.log(state.value);\n    props.teamId = state.value;\n  };\n\n  const sendData = () => {\n    props.parentCallback({\n      id: state.id,\n      value: state.value\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(HiddenButton, {\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.teamName), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Pick #\", props.index + 1)), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Choose Traded Team:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, Object.keys(teamData).map((value, index) => React.createElement(\"option\", {\n    id: index,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, teamData[value].name, \" \"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Save Changes\")))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx"],"names":["React","useState","styled","teamData","Modal","Button","Form","HiddenButton","button","TeamModal","props","show","setShow","handleClose","handleShow","state","value","handleChange","event","target","console","log","sendData","handleSubmit","teamId","parentCallback","id","teamName","index","Object","keys","map","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './TeamModal.css';\n\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n    \n`;\n\n\nexport default function TeamModal(props) {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    var state = {\n        value: 0\n    }\n\n\n    const handleChange = (event) => {\n        state = { value: event.target.value }\n        console.log(state.value)\n        sendData();\n        //props.teamId = state.value;\n        \n    }\n    //TODO: Fix later\n    const handleSubmit = (event) => {\n        console.log(state.value)\n        props.teamId = state.value;        \n    }\n\n    const sendData = () => {\n        props.parentCallback({\n            id: state.id,\n            value: state.value\n        });\n        \n    }\n\n    return (\n        <>\n        <HiddenButton onClick={handleShow}>\n            {props.teamName}\n        </HiddenButton>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Pick #{props.index + 1}</Modal.Title>\n            </Modal.Header>\n            <Form>\n                <Modal.Body>Choose Traded Team:<br />\n\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n\n                        <Form.Control as=\"select\" onChange={handleChange}>\n                            {Object.keys(teamData).map((value, index) => (\n                                <option id={index} value={value}>{teamData[value].name} </option>\n                            ))\n                            }\n                        </Form.Control>\n                    </Form.Group>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n            </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n            </Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}