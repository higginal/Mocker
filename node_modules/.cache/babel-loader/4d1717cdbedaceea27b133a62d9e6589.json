{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/Mock.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './Mock.css';\nconst nflTeams = {\n  0: \"Arizona Cardinals\",\n  1: \"Atlanta Falcons\",\n  2: \"Baltimore Ravens\",\n  3: \"Buffalo Bills\",\n  4: \"Carolina Panthers\",\n  5: \"Chicago Bears\",\n  6: \"Cincinnati Bengals\",\n  7: \"Cleveland Browns\",\n  8: \"Dallas Cowboys\",\n  9: \"Denver Broncos\",\n  10: \"Detroit Lions\",\n  11: \"Green Bay Packers\",\n  12: \"Houston Texans\",\n  13: \"Indianapolis Colts\",\n  14: \"Jacksonville Jaguars\",\n  15: \"Kansas City Chiefs\",\n  16: \"Los Angeles Chargers\",\n  17: \"Los Angeles Rams\",\n  18: \"Miami Dolphins\",\n  19: \"Minnesota Vikings\",\n  20: \"New England Patriots\",\n  21: \"New Orleans Saints\",\n  22: \"New York Giants\",\n  23: \"New York Jets\",\n  24: \"Oakland Raiders\",\n  25: \"Philadelphia Eagles\",\n  26: \"Pittsburgh Steelers\",\n  27: \"San Francisco 49ers\",\n  28: \"Seattle Seahawks\",\n  29: \"Tampa Bay Buccaneers\",\n  30: \"Tennessee Titans\",\n  31: \"Washington Redskins\"\n};\n\nfunction DraftCard(props) {\n  return React.createElement(Card, {\n    className: \"teamCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", nflTeams[props.value], \" \"));\n}\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nconst getItemStyle = (isDragging, DraggableStyle) => ({\n  //userSelect: \"none\",\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\" //...DraggableStyle\n\n});\n\nconst grid = 8;\n\nconst getListStyle = isDraggingOver => ({//background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  //padding: grid,\n});\n\nclass GenerateList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderTeams: props.value,\n      orderPlayers: Array(32).fill(null)\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const orderTeams = reorder(this.state.orderTeams, result.source.index, result.destination.index);\n    this.setState({\n      orderTeams\n    });\n  }\n\n  renderTeamCard(i) {\n    return React.createElement(DraftCard, {\n      value: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const currentTeams = this.state.orderTeams.slice();\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"table\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Team\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Player\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.orderTeams.map((value, index) => React.createElement(Draggable, {\n      key: value.id,\n      draggableId: value.id,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"tr\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.renderTeamCard(value.content)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Test\")))), provided.placeholder))));\n  }\n\n}\n\nfunction Mock() {\n  let defaultOrder = [];\n\n  for (var i = 0; i < 32; i++) {\n    defaultOrder.push({\n      id: 'item-' + i,\n      content: i\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"draftTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(GenerateList, {\n    value: defaultOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  })));\n}\n\nexport default Mock;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/Mock.js"],"names":["React","Card","Container","Table","DragDropContext","Droppable","Draggable","nflTeams","DraftCard","props","value","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","getItemStyle","isDragging","DraggableStyle","background","grid","getListStyle","isDraggingOver","GenerateList","Component","constructor","state","orderTeams","orderPlayers","fill","onDragEnd","bind","destination","source","index","setState","renderTeamCard","i","render","currentTeams","slice","provided","snapshot","innerRef","map","id","draggableProps","dragHandleProps","style","content","placeholder","Mock","defaultOrder","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Table from 'react-bootstrap/Table'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './Mock.css';\n\nconst nflTeams = {\n    0: \"Arizona Cardinals\",\n    1: \"Atlanta Falcons\",\n    2: \"Baltimore Ravens\",\n    3: \"Buffalo Bills\",\n    4: \"Carolina Panthers\",\n    5: \"Chicago Bears\",\n    6: \"Cincinnati Bengals\",\n    7: \"Cleveland Browns\",\n    8: \"Dallas Cowboys\",\n    9: \"Denver Broncos\",\n    10: \"Detroit Lions\",\n    11: \"Green Bay Packers\",\n    12: \"Houston Texans\",\n    13: \"Indianapolis Colts\",\n    14: \"Jacksonville Jaguars\",\n    15: \"Kansas City Chiefs\",\n    16: \"Los Angeles Chargers\",\n    17: \"Los Angeles Rams\",\n    18: \"Miami Dolphins\",\n    19: \"Minnesota Vikings\",\n    20: \"New England Patriots\",\n    21: \"New Orleans Saints\",\n    22: \"New York Giants\",\n    23: \"New York Jets\",\n    24: \"Oakland Raiders\",\n    25: \"Philadelphia Eagles\",\n    26: \"Pittsburgh Steelers\",\n    27: \"San Francisco 49ers\",\n    28: \"Seattle Seahawks\",\n    29: \"Tampa Bay Buccaneers\",\n    30: \"Tennessee Titans\",\n    31: \"Washington Redskins\"\n}\n\nfunction DraftCard(props) {\n\n    return (\n        <Card className=\"teamCard\">\n            <Card.Body> {nflTeams[props.value]} </Card.Body>\n        </Card>\n    )\n\n}\n\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst getItemStyle = (isDragging, DraggableStyle) => ({\n    //userSelect: \"none\",\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n\n    //...DraggableStyle\n\n});\n\nconst grid = 8;\n\nconst getListStyle = isDraggingOver => ({\n    //background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    //padding: grid,\n    \n});\n\n\nclass GenerateList extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            orderTeams: props.value,\n            orderPlayers: Array(32).fill(null),\n        }\n\n        this.onDragEnd = this.onDragEnd.bind(this);\n\n    }\n\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const orderTeams = reorder(\n            this.state.orderTeams,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.setState({\n            orderTeams\n        })\n    }\n\n\n    renderTeamCard(i) {\n        return <DraftCard value={i} />;\n    }\n\n    render() {\n\n        const currentTeams = this.state.orderTeams.slice()\n\n        return (\n\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <Droppable droppableId=\"droppable\">\n\n                    {(provided, snapshot) => (\n                        <table\n                            ref={provided.innerRef}\n                            style={getListStyle(snapshot.isDraggingOver)}\n                            responsive>\n                            <thead>\n                                <tr>\n                                    <th>Team</th>\n                                    <th>Player</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.orderTeams.map((value, index) => (\n                                    <Draggable key={value.id} draggableId={value.id} index={index}>\n                                        {(provided, snapshot) => (\n                                            <tr\n                                                ref={provided.innerRef}\n                                                {...provided.draggableProps}\n                                                {...provided.dragHandleProps}\n                                                style={getItemStyle(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                )}\n                                            >\n                                                <td>{this.renderTeamCard(value.content)}</td>\n                                                <td>Test</td>\n                                            </tr>\n                                        )}\n                                    </Draggable>\n                                ))}\n                                {provided.placeholder}\n                            </tbody>\n                        </table>\n                    )}\n                </Droppable>\n            </DragDropContext>\n\n        );\n\n    }\n\n\n\n}\n\n\n\nfunction Mock() {\n\n\n    let defaultOrder = []\n\n    for (var i = 0; i < 32; i++) {\n        defaultOrder.push(\n            {\n                id: 'item-' + i,\n                content: i\n            }\n        )\n    }\n\n\n\n\n\n    return (\n        <div className=\"draftTable\">\n            <Container>\n\n                <GenerateList value={defaultOrder} />\n\n            </Container>\n        </div>\n    );\n}\n\nexport default Mock;"]},"metadata":{},"sourceType":"module"}