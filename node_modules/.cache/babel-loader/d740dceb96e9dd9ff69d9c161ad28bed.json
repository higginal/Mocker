{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n`;\nexport default function TeamModal(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //console.log(Array(teamData))\n\n\n  const teams = Array(teamData)[0]; //console.log(teams)\n\n  var x;\n\n  for (const property in teamData) {\n    console.log(teamData[property].name);\n  } //teams.map(value => ( console.log(value)))\n  //console.log(teamData[0])\n\n\n  Array(teamData).map(value => {//console.log(value)\n    //console.log(\"ok\");\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HiddenButton, {\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.teamName), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Pick #\", props.index + 1)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Woohoo, you're reading this text in a modal!\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(DropdownButton, {\n    id: \"dropdown-basic-button\",\n    title: \"Dropdown button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, () => {\n    for (const property in teamData) {\n      React.createElement(Dropdown.Item, {\n        href: propery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"teamData[property].name\"); //console.log(teamData[property].name)\n    }\n  } //setShow(true)\n  , React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Another action\"), React.createElement(Dropdown.Item, {\n    href: \"#/action-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Something else\"))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save Changes\"))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx"],"names":["React","useState","styled","teamData","Modal","Button","DropdownButton","Dropdown","HiddenButton","button","TeamModal","props","show","setShow","handleClose","handleShow","teams","Array","x","property","console","log","name","map","value","teamName","index","propery"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n`;\n\nexport default function TeamModal(props) {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //console.log(Array(teamData))\n\n    const teams = Array(teamData)[0]\n\n    //console.log(teams)\n    var x;\n    for(const property in teamData){\n        console.log(teamData[property].name)\n    }\n\n    //teams.map(value => ( console.log(value)))\n\n    //console.log(teamData[0])\n\n    Array(teamData).map(value => {\n        //console.log(value)\n        //console.log(\"ok\");\n\n    }\n    )\n\n    \n\n    return (\n        <>\n        <HiddenButton onClick={handleShow}>\n            {props.teamName}\n        </HiddenButton>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Pick #{props.index + 1}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Woohoo, you're reading this text in a modal!<br />\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\">\n                    {() => { for(const property in teamData){\n                            <Dropdown.Item href={propery}>teamData[property].name</Dropdown.Item>\n                            //console.log(teamData[property].name)\n                        }}\n                        //setShow(true)\n                    }\n\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                </DropdownButton>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n            </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Save Changes\n            </Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}