{"ast":null,"code":"import _defineProperty from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _taggedTemplateLiteral from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    width: 80%;\\n    margin: auto;\\n    overflow-y: scroll;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{DragDropContext}from\"react-beautiful-dnd\";import'./css/Mock.css';import TeamColumn from'./TeamColumn';import PlayerColumn from'./PlayerColumn';import PlayerPool from'./PlayerPool';import initialData from'./initial-data.js';import styled from'styled-components';import PlayersFile from'./players.json';var DraftTable=styled.div(_templateObject());var Mock=/*#__PURE__*/function(_React$Component){_inherits(Mock,_React$Component);function Mock(props){var _this;_classCallCheck(this,Mock);_this=_possibleConstructorReturn(this,_getPrototypeOf(Mock).call(this,props));_this.state=initialData;_this.sendData=function(playerColumnIds){//console.log(this.state.columns['player-column'].playerIds)\n//console.log(this.state.columns['player-pool'].playerIds)\n_this.props.parentCallback({ids:_this.state.columns['team-column'].teamIds,teams:_this.state.teams,pickedPlayers:playerColumnIds,players:_this.state.players});};_this.onDragEnd=function(result){var destination=result.destination,source=result.source,draggableId=result.draggableId;if(!destination){return;}if(destination.droppableId===source.droppableId&&destination.index===source.index){return;}if(source.droppableId===\"team-column\"&&destination.droppableId!==\"team-column\"||source.droppableId!==\"team-column\"&&destination.droppableId===\"team-column\"){return;}if(source.droppableId===\"team-column\"&&destination.droppableId===\"team-column\"){//For the team order\nvar column=_this.state.columns[source.droppableId];var newTeamIds=Array.from(column.teamIds);newTeamIds.splice(source.index,1);newTeamIds.splice(destination.index,0,draggableId);var newColumn=_objectSpread({},column,{teamIds:newTeamIds});var newState=_objectSpread({},_this.state,{columns:_objectSpread({},_this.state.columns,_defineProperty({},newColumn.id,newColumn))});_this.setState(newState);_this.sendData(_this.state.columns['player-column'].playerIds);//console.log(this.state.teams)\n}else{//For the players\nvar startColumn=_this.state.columns[source.droppableId];var finishColumn=_this.state.columns[destination.droppableId];if(startColumn===finishColumn){//If in the same column\nvar _column=startColumn;var newPlayerIds=Array.from(_column.playerIds);newPlayerIds.splice(source.index,1);newPlayerIds.splice(destination.index,0,draggableId);var _newColumn=_objectSpread({},_column,{playerIds:newPlayerIds});var _newState=_objectSpread({},_this.state,{columns:_objectSpread({},_this.state.columns,_defineProperty({},_newColumn.id,_newColumn))});_this.setState(_newState);_this.sendData(_this.state.columns['player-column'].playerIds);}else{var _objectSpread4;// if to different column\nif(finishColumn.id==='player-column'&&finishColumn.playerIds.length>=_this.state.columns[\"team-column\"].teamIds.length){console.log('full draft');return;}var startPlayerIds=Array.from(startColumn.playerIds);startPlayerIds.splice(source.index,1);var finishPlayerIds=Array.from(finishColumn.playerIds);finishPlayerIds.splice(destination.index,0,draggableId);var newStartColumn=_objectSpread({},startColumn,{playerIds:startPlayerIds});var newFinishColumn=_objectSpread({},finishColumn,{playerIds:finishPlayerIds});var newAltState=_objectSpread({},_this.state,{columns:_objectSpread({},_this.state.columns,(_objectSpread4={},_defineProperty(_objectSpread4,newStartColumn.id,newStartColumn),_defineProperty(_objectSpread4,newFinishColumn.id,newFinishColumn),_objectSpread4))});_this.setState(newAltState);_this.sendData(newAltState.columns['player-column'].playerIds);}}//console.log(PlayersFile['players']['Tua-T'].content)\n};var defaultOrder={};var filledTeamIds=[];var counter=0;initialData.draftOrder.map(function(value){defaultOrder['team-'+counter]={id:'team-'+counter,content:value};filledTeamIds.push('team-'+counter);counter++;});var allPlayers={};console.log(PlayersFile['players']['Tua-T']);_this.state=_objectSpread({},_this.state,{teams:defaultOrder,columns:_objectSpread({},_this.state.columns,{'team-column':_objectSpread({},_this.state.columns['team-column'],{teamIds:filledTeamIds}),'player-pool':_objectSpread({},_this.state.columns['player-pool'],{playerIds:_this.state.allPlayerIds})})});_this.sendData(_this.state.columns['player-column'].playerIds);return _this;}_createClass(Mock,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(DragDropContext,{onDragEnd:this.onDragEnd},React.createElement(DraftTable,null,this.state.columnOrder.map(function(columnId){//alert(columnId)\nvar teamColumn=_this2.state.columns[columnId];//alert(teamColumn.id)\nif(columnId==='team-column'){var teams=_this2.state.teams;var actualTeams=teamColumn.teamIds;//const teamIds = teams.map(teamId => this.state.teams)\n//teamColumn.teamIds = Array(teams);\nreturn React.createElement(TeamColumn,{key:teamColumn.id,title:\"Teams\",teamIds:actualTeams,column:teamColumn,teams:teams});}if(columnId==='player-column'){//const players = this.state.players;\nvar players=_this2.state.players;var pickedPlayers=teamColumn.playerIds;return React.createElement(PlayerColumn,{key:teamColumn.id,playerIds:pickedPlayers,column:teamColumn,players:players,allPlayerIds:_this2.state.allPlayerIds,teamColumn:_this2.state.columns['team-column'],teams:_this2.state.teams});}if(columnId==='player-pool'){var _players=_this2.state.players;var unpickedPlayers=teamColumn.playerIds;return React.createElement(PlayerPool,{key:teamColumn.id,playerIds:unpickedPlayers,column:teamColumn,players:_players,allPlayerIds:_this2.state.allPlayerIds});}})));}}]);return Mock;}(React.Component);export{Mock as default};","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/Mock.js"],"names":["React","DragDropContext","TeamColumn","PlayerColumn","PlayerPool","initialData","styled","PlayersFile","DraftTable","div","Mock","props","state","sendData","playerColumnIds","parentCallback","ids","columns","teamIds","teams","pickedPlayers","players","onDragEnd","result","destination","source","draggableId","droppableId","index","column","newTeamIds","Array","from","splice","newColumn","newState","id","setState","playerIds","startColumn","finishColumn","newPlayerIds","length","console","log","startPlayerIds","finishPlayerIds","newStartColumn","newFinishColumn","newAltState","defaultOrder","filledTeamIds","counter","draftOrder","map","value","content","push","allPlayers","allPlayerIds","columnOrder","columnId","teamColumn","actualTeams","unpickedPlayers","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport './css/Mock.css';\nimport TeamColumn from './TeamColumn';\nimport PlayerColumn from './PlayerColumn';\nimport PlayerPool from './PlayerPool';\nimport initialData from './initial-data.js';\nimport styled from 'styled-components';\nimport PlayersFile from './players.json';\n\n\nconst DraftTable = styled.div`\n    display: flex;\n    width: 80%;\n    margin: auto;\n    overflow-y: scroll;\n`;\n\n\n\nexport default class Mock extends React.Component {\n\n    state = initialData;\n\n    sendData = (playerColumnIds) => {\n        //console.log(this.state.columns['player-column'].playerIds)\n        //console.log(this.state.columns['player-pool'].playerIds)\n        this.props.parentCallback({\n            ids: this.state.columns['team-column'].teamIds,\n            teams: this.state.teams,\n            pickedPlayers: playerColumnIds,\n            players: this.state.players\n        });\n\n    }\n\n    constructor(props) {\n        super(props)\n\n        let defaultOrder = {};\n        let filledTeamIds = []\n\n        var counter = 0;\n\n        initialData.draftOrder.map(function (value) {\n\n            defaultOrder['team-' + counter] = (\n                {\n                    id: 'team-' + counter,\n                    content: value\n                }\n            )\n\n            filledTeamIds.push('team-' + counter)\n            counter++;\n        }\n        )\n\n\n\n        const allPlayers = {}\n\n        console.log(PlayersFile['players']['Tua-T'])\n\n        this.state = {\n            ...this.state,\n            teams: defaultOrder,\n            columns: {\n                ...this.state.columns,\n                'team-column': {\n                    ...this.state.columns['team-column'],\n                    teamIds: filledTeamIds\n                },\n                'player-pool': {\n                    ...this.state.columns['player-pool'],\n                    playerIds: this.state.allPlayerIds\n                }\n            }\n        }\n\n        this.sendData(this.state.columns['player-column'].playerIds)\n\n    }\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result;\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n            return;\n        }\n\n        if (source.droppableId === \"team-column\" && destination.droppableId !== \"team-column\" ||\n            source.droppableId !== \"team-column\" && destination.droppableId === \"team-column\") {\n            return;\n        }\n\n        if (source.droppableId === \"team-column\" && destination.droppableId === \"team-column\") {\n            //For the team order\n            const column = this.state.columns[source.droppableId];\n            const newTeamIds = Array.from(column.teamIds)\n\n            newTeamIds.splice(source.index, 1)\n            newTeamIds.splice(destination.index, 0, draggableId)\n\n            const newColumn = {\n                ...column,\n                teamIds: newTeamIds,\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn\n                }\n            };\n\n            this.setState(newState)\n            this.sendData(this.state.columns['player-column'].playerIds)\n            //console.log(this.state.teams)\n        } else {\n            //For the players\n            const startColumn = this.state.columns[source.droppableId];\n            const finishColumn = this.state.columns[destination.droppableId];\n\n\n            if (startColumn === finishColumn) { //If in the same column\n                const column = startColumn;\n                const newPlayerIds = Array.from(column.playerIds)\n\n                newPlayerIds.splice(source.index, 1)\n                newPlayerIds.splice(destination.index, 0, draggableId)\n\n                const newColumn = {\n                    ...column,\n                    playerIds: newPlayerIds,\n                };\n\n                const newState = {\n                    ...this.state,\n                    columns: {\n                        ...this.state.columns,\n                        [newColumn.id]: newColumn\n                    },\n                };\n                this.setState(newState)\n                this.sendData(this.state.columns['player-column'].playerIds)\n\n\n            } else {\n                // if to different column\n\n                if (finishColumn.id === 'player-column' && finishColumn.playerIds.length >= this.state.columns[\"team-column\"].teamIds.length) {\n                    console.log('full draft')\n                    return\n                }\n\n                const startPlayerIds = Array.from(startColumn.playerIds)\n                startPlayerIds.splice(source.index, 1)\n                const finishPlayerIds = Array.from(finishColumn.playerIds)\n                finishPlayerIds.splice(destination.index, 0, draggableId)\n\n                const newStartColumn = {\n                    ...startColumn,\n                    playerIds: startPlayerIds,\n                };\n\n                const newFinishColumn = {\n                    ...finishColumn,\n                    playerIds: finishPlayerIds\n                };\n\n                const newAltState = {\n                    ...this.state,\n                    columns: {\n                        ...this.state.columns,\n                        [newStartColumn.id]: newStartColumn,\n                        [newFinishColumn.id]: newFinishColumn\n                    },\n\n                };\n                this.setState(newAltState);\n\n                this.sendData(newAltState.columns['player-column'].playerIds)\n\n            }\n        }\n\n        //console.log(PlayersFile['players']['Tua-T'].content)\n\n\n    }\n    render() {\n\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <DraftTable>\n                    {this.state.columnOrder.map(columnId => {\n                        //alert(columnId)\n                        const teamColumn = this.state.columns[columnId];\n\n                        //alert(teamColumn.id)\n                        if (columnId === 'team-column') {\n                            const teams = this.state.teams;\n                            const actualTeams = teamColumn.teamIds;\n                            //const teamIds = teams.map(teamId => this.state.teams)\n                            //teamColumn.teamIds = Array(teams);\n\n                            return <TeamColumn key={teamColumn.id} title=\"Teams\" teamIds={actualTeams} column={teamColumn} teams={teams} />\n                        }\n\n                        if (columnId === 'player-column') {\n                            //const players = this.state.players;\n                            const players = this.state.players;\n                            const pickedPlayers = teamColumn.playerIds;\n\n                            return <PlayerColumn key={teamColumn.id} playerIds={pickedPlayers} column={teamColumn}\n                                players={players} allPlayerIds={this.state.allPlayerIds} teamColumn={this.state.columns['team-column']}\n                                teams={this.state.teams} />\n                        }\n\n                        if (columnId === 'player-pool') {\n                            const players = this.state.players;\n                            const unpickedPlayers = teamColumn.playerIds;\n                            return <PlayerPool key={teamColumn.id} playerIds={unpickedPlayers} column={teamColumn} players={players} allPlayerIds={this.state.allPlayerIds} />\n                        }\n\n                    })\n                    }\n                </DraftTable>\n\n            </DragDropContext>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}