{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/SaveModal.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler';\nimport styled from 'styled-components';\nconst TinyTextArea = styled(Form.Control)`\n    font-size: 5pt;\n    width: 100%;\n\n`;\nconst LinkLocation = styled.div`\n    display: flex;\n        \n    width: 110%;\n    height: 85px;\n    padding: 3%;\n\n`;\nconst UrlTextArea = styled(Form.Control)`\n    \n    width: 100%;\n    margin-left: 5px;\n    resize: none;\n    max-height: 85px;\n\n`;\n\nfunction createBinary(stateData) {\n  let objJsonStr = JSON.stringify(stateData);\n  let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\"); //console.log(objJsonB64);\n  //var actual = JSON.parse(atob(objJsonB64));\n  //console.log(actual);\n\n  return objJsonB64; //var testConvert = btoa(draftInfo);\n  //return testConvert;\n}\n\nexport default function ShareModal(props) {\n  let testText = createBinary(props.allData);\n  let testPBUrl = \"pastebin.filler.com\";\n  var textArea;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const copyToClipboard = () => {\n    textArea.select();\n    document.execCommand('copy');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    onClick: handleShow,\n    variant: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Shareable Data:\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(TinyTextArea, {\n    as: \"textarea\",\n    rows: \"40\",\n    ref: textarea => textArea = textarea,\n    defaultValue: testText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: copyToClipboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Copy\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(LinkLocation, {\n    id: \"pastebin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Save to Pastebin\"), React.createElement(UrlTextArea, {\n    as: \"textarea\",\n    rows: \"1\",\n    defaultValue: \"ok\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/SaveModal.js"],"names":["React","useState","Modal","Button","Form","DraftCompiler","styled","TinyTextArea","Control","LinkLocation","div","UrlTextArea","createBinary","stateData","objJsonStr","JSON","stringify","objJsonB64","Buffer","from","toString","ShareModal","props","testText","allData","testPBUrl","textArea","show","setShow","handleClose","handleShow","copyToClipboard","select","document","execCommand","textarea"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler'\nimport styled from 'styled-components';\n\nconst TinyTextArea = styled(Form.Control) `\n    font-size: 5pt;\n    width: 100%;\n\n`\n\nconst LinkLocation = styled.div`\n    display: flex;\n        \n    width: 110%;\n    height: 85px;\n    padding: 3%;\n\n`\n\nconst UrlTextArea = styled(Form.Control) `\n    \n    width: 100%;\n    margin-left: 5px;\n    resize: none;\n    max-height: 85px;\n\n`\n\nfunction createBinary(stateData) {\n\n    let objJsonStr = JSON.stringify(stateData);\n    let objJsonB64 = Buffer.from(objJsonStr).toString(\"base64\");\n\n    //console.log(objJsonB64);\n\n    //var actual = JSON.parse(atob(objJsonB64));\n    //console.log(actual);\n    return objJsonB64;\n\n\n    //var testConvert = btoa(draftInfo);\n    //return testConvert;\n\n}\n\n\n\n\nexport default function ShareModal(props) {\n\n\n    let testText = createBinary(props.allData);\n    let testPBUrl = \"pastebin.filler.com\";\n    var textArea;\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n\n        setShow(true);\n\n    }\n\n    const copyToClipboard = () => {\n        textArea.select();\n        document.execCommand('copy');\n    }\n\n    return (\n        <>\n        <Button onClick={handleShow} variant=\"danger\">Save</Button>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton><Modal.Title>Shareable Data:</Modal.Title></Modal.Header>\n            <Modal.Body>\n\n                <TinyTextArea as=\"textarea\" rows=\"40\" ref={(textarea) => textArea = textarea} defaultValue={testText}>\n                </TinyTextArea>\n                <Button onClick={copyToClipboard}>Copy</Button> <br />\n                <LinkLocation id=\"pastebin\">\n                    <Button>Save to Pastebin</Button>\n                    <UrlTextArea as=\"textarea\" rows=\"1\" defaultValue=\"ok\">\n\n                    </UrlTextArea>\n                </LinkLocation>\n            </Modal.Body>\n        </Modal>\n        </>\n    );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}