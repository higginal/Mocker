{"ast":null,"code":"import _slicedToArray from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Modal from'react-bootstrap/Modal';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import DraftCompiler from'./DraftCompiler';function draftText(teams){return DraftCompiler(teams);}function setupOrder(props){var allInfo=props.allData;var totalIds=[];var totalTeams={};var totalPickedPlayers=[];var totalPlayers={};var i;var count=0;for(i=0;i<allInfo.totalRounds;i++){totalIds=totalIds.concat(allInfo.mocks[i].columns['team-column'].teamIds);totalTeams=Object.assign(totalTeams,allInfo.mocks[i].teams);totalPickedPlayers=totalPickedPlayers.concat(allInfo.mocks[i].columns['player-column'].playerIds);totalPlayers=Object.assign(totalPlayers,allInfo.mocks[i].players);}var allRoundInfo={ids:totalIds,teams:totalTeams,pickedPlayers:totalPickedPlayers,players:totalPlayers};return draftText(allRoundInfo);}export default function ShareModal(props){var draftOutput=setupOrder(props);//draftText(props.teamInfo)\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){setShow(true);//draftOutput = draftText(allRoundInfo);\n};return React.createElement(React.Fragment,null,React.createElement(Button,{onClick:handleShow,variant:\"danger\"},\"Share\"),React.createElement(Modal,{show:show,onHide:handleClose},React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,null,\"Shareable List:\")),React.createElement(Modal.Body,null,React.createElement(Form.Control,{as:\"textarea\",rows:\"18\",defaultValue:draftOutput}))));}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/ShareModal.jsx"],"names":["React","useState","Modal","Button","Form","DraftCompiler","draftText","teams","setupOrder","props","allInfo","allData","totalIds","totalTeams","totalPickedPlayers","totalPlayers","i","count","totalRounds","concat","mocks","columns","teamIds","Object","assign","playerIds","players","allRoundInfo","ids","pickedPlayers","ShareModal","draftOutput","show","setShow","handleClose","handleShow"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CAIA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CAEtB,MAAOF,CAAAA,aAAa,CAACE,KAAD,CAApB,CAEH,CAED,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAEvB,GAAIC,CAAAA,OAAO,CAAGD,KAAK,CAACE,OAApB,CAEA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,kBAAkB,CAAG,EAAzB,CACA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CAEA,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACA,IAAKD,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGN,OAAO,CAACQ,WAAxB,CAAqCF,CAAC,EAAtC,CAA0C,CAEtCJ,QAAQ,CAAGA,QAAQ,CAACO,MAAT,CAAgBT,OAAO,CAACU,KAAR,CAAcJ,CAAd,EAAiBK,OAAjB,CAAyB,aAAzB,EAAwCC,OAAxD,CAAX,CAEAT,UAAU,CAAGU,MAAM,CAACC,MAAP,CAAcX,UAAd,CAA0BH,OAAO,CAACU,KAAR,CAAcJ,CAAd,EAAiBT,KAA3C,CAAb,CACAO,kBAAkB,CAAGA,kBAAkB,CAACK,MAAnB,CAA0BT,OAAO,CAACU,KAAR,CAAcJ,CAAd,EAAiBK,OAAjB,CAAyB,eAAzB,EAA0CI,SAApE,CAArB,CACAV,YAAY,CAAGQ,MAAM,CAACC,MAAP,CAAcT,YAAd,CAA4BL,OAAO,CAACU,KAAR,CAAcJ,CAAd,EAAiBU,OAA7C,CAAf,CACH,CAGD,GAAIC,CAAAA,YAAY,CAAG,CACfC,GAAG,CAAEhB,QADU,CAEfL,KAAK,CAAEM,UAFQ,CAGfgB,aAAa,CAAEf,kBAHA,CAIfY,OAAO,CAAEX,YAJM,CAAnB,CAOA,MAAOT,CAAAA,SAAS,CAACqB,YAAD,CAAhB,CACH,CAGD,cAAe,SAASG,CAAAA,UAAT,CAAoBrB,KAApB,CAA2B,CAEtC,GAAIsB,CAAAA,WAAW,CAAGvB,UAAU,CAACC,KAAD,CAA5B,CACA;AAHsC,cAMdR,QAAQ,CAAC,KAAD,CANM,wCAM/B+B,IAN+B,eAMzBC,OANyB,eAOtC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,CACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAErBF,OAAO,CAAC,IAAD,CAAP,CAEA;AACH,CALD,CAOA,MACI,yCACA,oBAAC,MAAD,EAAQ,OAAO,CAAEE,UAAjB,CAA6B,OAAO,CAAC,QAArC,UADA,CAEA,oBAAC,KAAD,EAAO,IAAI,CAAEH,IAAb,CAAmB,MAAM,CAAEE,WAA3B,EACI,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,EAA0B,oBAAC,KAAD,CAAO,KAAP,wBAA1B,CADJ,CAEI,oBAAC,KAAD,CAAO,IAAP,MACI,oBAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,UAAjB,CAA4B,IAAI,CAAC,IAAjC,CAAsC,YAAY,CAAEH,WAApD,EADJ,CAFJ,CAFA,CADJ,CAoBH","sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport DraftCompiler from './DraftCompiler'\n\n\n\nfunction draftText(teams) {\n\n    return DraftCompiler(teams)\n\n}\n\nfunction setupOrder(props) {\n\n    let allInfo = props.allData;\n\n    let totalIds = []\n    let totalTeams = {}\n    let totalPickedPlayers = []\n    let totalPlayers = {}\n\n    var i;\n    var count = 0;\n    for (i = 0; i < allInfo.totalRounds; i++) {\n\n        totalIds = totalIds.concat(allInfo.mocks[i].columns['team-column'].teamIds)\n\n        totalTeams = Object.assign(totalTeams, allInfo.mocks[i].teams)\n        totalPickedPlayers = totalPickedPlayers.concat(allInfo.mocks[i].columns['player-column'].playerIds)\n        totalPlayers = Object.assign(totalPlayers, allInfo.mocks[i].players)\n    }\n\n\n    let allRoundInfo = {\n        ids: totalIds,\n        teams: totalTeams,\n        pickedPlayers: totalPickedPlayers,\n        players: totalPlayers\n    }\n\n    return draftText(allRoundInfo)\n}\n\n\nexport default function ShareModal(props) {\n\n    var draftOutput = setupOrder(props)\n    //draftText(props.teamInfo)\n\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n\n        setShow(true);\n\n        //draftOutput = draftText(allRoundInfo);\n    }\n\n    return (\n        <>\n        <Button onClick={handleShow} variant=\"danger\">Share</Button>\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton><Modal.Title>Shareable List:</Modal.Title></Modal.Header>\n            <Modal.Body>\n                <Form.Control as=\"textarea\" rows=\"18\" defaultValue={draftOutput}>\n\n                </Form.Control>\n            </Modal.Body>\n        </Modal>\n\n        </>\n    );\n\n\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}