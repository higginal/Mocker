{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n    integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n    crossorigin: \"anonymous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    color: \"lightgrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"developed by Avery Higgins, 2020\"));\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n  return React.createElement(Mock, {\n    parentCallback: callbackFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nclass Top extends React.Component {\n  //handleChange = val => setValue(val);\n  addMockPage() {\n    let index = this.state.totalRounds;\n    this.state.totalRounds++; //console.log(index)\n\n    var filledTeamIds = [];\n    let defaultOrder2 = {};\n    var counter = 0;\n    initialData.draftOrder[index].map(function (value) {\n      defaultOrder['team-' + counter] = {\n        id: 'team-' + counter,\n        content: value\n      };\n      console.log(value);\n      filledTeamIds.push('team-' + counter);\n      counter++;\n    });\n    console.log(defaultOrder); //console.log(filledTeamIds)\n\n    this.state.mocks[index] = {\n      'teams': defaultOrder2,\n      'players': {},\n      allPlayerIds: playerFile2['ids'],\n      columns: {\n        'team-column': {\n          id: 'team-column',\n          title: 'Teams',\n          teamIds: []\n        },\n        'player-column': {\n          id: 'player-column',\n          title: 'Picked Players',\n          playerIds: []\n        },\n        'player-pool': {\n          id: 'player-pool',\n          title: 'Player Pool',\n          playerIds: []\n        }\n      },\n      columnOrder: ['team-column', 'player-column', 'player-pool']\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      prevArrow: false,\n      nextArrow: false,\n      mocks: {},\n      currentMock: 0,\n      totalRounds: 1,\n      message: \"t\",\n      currentMockObj: null\n    };\n\n    this.callbackFunction = childData => {// this.setState({ ...this.state, message: childData }) \n    };\n\n    this.changeMockPageData = (newState, index) => {\n      console.log(index); //this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\n\n      var numIndex = index;\n      this.setState({ ...this.state,\n        message: 'ok boom',\n        mocks: { ...this.state.mocks,\n          [index]: newState\n        }\n      }, () => console.log(this.state.mocks)); //console.log(this.state.message)\n      //console.log(this.state.mocks[index].columns['team-column'].teamIds)\n      //console.log(\"ok\")\n    };\n\n    this.state.mocks[0] = initialData;\n    let defaultOrder = {};\n    let filledTeamIds = [];\n    var counter = 0;\n    initialData.draftOrder[0].map(function (value) {\n      defaultOrder['team-' + counter] = {\n        id: 'team-' + counter,\n        content: value\n      };\n      filledTeamIds.push('team-' + counter);\n      counter++;\n    });\n    const allPlayers = {};\n    this.state.mocks[0] = { ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: { ...this.state.mocks[0].columns,\n        'team-column': { ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': { ...this.state.mocks[0].columns['player-pool'],\n          playerIds: initialData.allPlayerIds\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    }\n\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"Mocker\"), React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"pages\",\n      size: \"lg\",\n      defaultValue: \"Create\",\n      className: \"btnGrp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"About\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"About\"), React.createElement(ShareModal, {\n      teamInfo: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Share\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Share\"), \" \"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Create\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Create\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Load\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Load\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"More\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"More\"))), React.createElement(Mock, {\n      parentCallback: this.callbackFunction,\n      changeMockCallback: this.changeMockPageData,\n      mockPage: this.state.mocks[this.state.currentMock],\n      mockIndex: this.state.currentMock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: !this.state.prevArrow,\n      onClick: () => {\n        this.state.currentMock--;\n        this.setState(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\u2039\"), React.createElement(Button, {\n      onClick: () => {\n        //console.log(this.state.currentMock)\n        this.addMockPage();\n        this.state.prevArrow = true;\n        this.state.currentMock++;\n        this.setState(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"+\"), React.createElement(Button, {\n      disabled: !this.state.nextArrow,\n      onClick: () => {\n        this.state.currentMock++;\n        this.setState(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"\\u203A\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js"],"names":["React","Mock","Container","ToggleButtonGroup","ToggleButton","ShareModal","Button","logo","initialData","playerFile2","App","createMockTable","mocks","mockIndex","callbackFunction","Top","Component","addMockPage","index","state","totalRounds","filledTeamIds","defaultOrder2","counter","draftOrder","map","value","defaultOrder","id","content","console","log","push","allPlayerIds","columns","title","teamIds","playerIds","columnOrder","constructor","prevArrow","nextArrow","currentMock","message","currentMockObj","childData","changeMockPageData","newState","numIndex","setState","allPlayers","teams","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n\n  return (<Mock parentCallback={callbackFunction} />);\n}\n\nclass Top extends React.Component {\n\n\n  state = {\n    prevArrow: false,\n    nextArrow: false,\n    mocks: {},\n    currentMock: 0,\n    totalRounds: 1,\n    message: \"t\",\n    currentMockObj: null\n  }\n\n  callbackFunction = (childData) => { // this.setState({ ...this.state, message: childData }) \n  }\n\n  changeMockPageData = (newState, index) => {\n    console.log(index)\n    //this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\n    var numIndex = index\n\n    this.setState({\n      ...this.state,\n      message: 'ok boom',\n      mocks: {\n        ...this.state.mocks,\n        [index]: newState\n      }\n\n    }, () => console.log(this.state.mocks))\n\n\n    //console.log(this.state.message)\n    //console.log(this.state.mocks[index].columns['team-column'].teamIds)\n\n    //console.log(\"ok\")\n  }\n\n  //handleChange = val => setValue(val);\n\n  addMockPage() {\n\n    let index = this.state.totalRounds\n    this.state.totalRounds++;\n    //console.log(index)\n    var filledTeamIds = []\n    let defaultOrder2 = {};\n    var counter = 0;\n\n    initialData.draftOrder[index].map(function (value) {\n\n      defaultOrder['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n      console.log(value)\n      filledTeamIds.push('team-' + counter)\n      counter++;\n    }\n    )\n\n    console.log(defaultOrder)\n\n    //console.log(filledTeamIds)\n\n    this.state.mocks[index] =\n      {\n        'teams': defaultOrder2,\n        'players': {},\n        allPlayerIds: playerFile2['ids'],\n\n        columns: {\n          'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: []\n          },\n\n          'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n          },\n\n          'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: []\n          }\n        },\n\n        columnOrder: ['team-column', 'player-column', 'player-pool']\n\n      }\n\n\n\n\n  }\n\n\n  constructor() {\n    super()\n    this.state.mocks[0] = initialData\n\n    let defaultOrder = {};\n    let filledTeamIds = []\n\n    var counter = 0;\n\n    initialData.draftOrder[0].map(function (value) {\n\n      defaultOrder['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds.push('team-' + counter)\n      counter++;\n    }\n    )\n\n    const allPlayers = {}\n\n    this.state.mocks[0] = {\n      ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: {\n        ...this.state.mocks[0].columns,\n        'team-column': {\n          ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': {\n          ...this.state.mocks[0].columns['player-pool'],\n          playerIds: initialData.allPlayerIds\n        }\n      }\n    }\n\n\n  }\n\n\n  render() {\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    }\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    }\n    return (\n\n      <Container>\n\n        <div className=\"Header\">\n\n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\" />Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n\n        <Mock parentCallback={this.callbackFunction} changeMockCallback={this.changeMockPageData} mockPage={this.state.mocks[this.state.currentMock]} mockIndex={this.state.currentMock} />\n\n        { //createMockTable(this.mocks, this.mockIndex, this.callbackFunction)\n\n          /* this.state.mocks.map((mock, index) => {\n \n             if (index === this.state.currentMock) {\n               console.log(this.state.mocks[index]['columns']['player-column'].playerIds)\n               this.state.currentMockObj = <Mock parentCallback={this.callbackFunction} changeMockCallback={this.changeMockPageData} mockPage={this.state.mocks[index]} mockIndex={index}/>\n               return this.state.currentMockObj\n               //return <Mock parentCallback={this.callbackFunction} mockPage={this.state.mocks[index]} />\n             }\n \n \n           })\n           */\n        }\n\n        <Button disabled={!this.state.prevArrow} onClick={() => {\n          this.state.currentMock--\n          this.setState(this.state)\n        }}>&#8249;</Button>\n\n        <Button onClick={() => {\n          //console.log(this.state.currentMock)\n          this.addMockPage()\n          this.state.prevArrow = true\n          this.state.currentMock++\n          this.setState(this.state)\n\n        }}>+</Button>\n\n        <Button disabled={!this.state.nextArrow} onClick={() => {\n          this.state.currentMock++\n          this.setState(this.state)\n        }} >&#8250;</Button>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}