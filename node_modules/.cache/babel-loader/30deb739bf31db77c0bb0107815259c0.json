{"ast":null,"code":"import _defineProperty from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _createClass from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/averyhiggins/Desktop/CS347/mock-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./css/App.css';import Mock from'./Mock';import'bootstrap/dist/css/bootstrap.min.css';import Container from'react-bootstrap/Container';import ToggleButtonGroup from'react-bootstrap/ToggleButtonGroup';import ToggleButton from'react-bootstrap/ToggleButton';import ShareModal from'./ShareModal';import Button from'react-bootstrap/Button';import logo from'./images/yellow_brown_logo.png';import initialData from'./initial-data.js';import playerFile2 from'./testPlayers.json';function App(){return React.createElement(\"div\",{className:\"App\"},React.createElement(\"link\",{rel:\"stylesheet\",href:\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",integrity:\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",crossorigin:\"anonymous\"}),React.createElement(Top,null),React.createElement(\"footer\",{color:\"lightgrey\"},\"developed by Avery Higgins, 2020\"));}function createMockTable(mocks,mockIndex,callbackFunction){return React.createElement(Mock,{parentCallback:callbackFunction});}var Top=/*#__PURE__*/function(_React$Component){_inherits(Top,_React$Component);_createClass(Top,[{key:\"addMockPage\",//handleChange = val => setValue(val);\nvalue:function addMockPage(){var index=this.state.totalRounds;this.state.totalRounds++;//console.log(index)\nvar filledTeamIds2=[];var defaultOrder2={};var counter=32*index;initialData.draftOrder[index].map(function(value){defaultOrder2['team-'+counter]={id:'team-'+counter,content:value};filledTeamIds2.push('team-'+counter);counter++;});//console.log(filledTeamIds)\n//this.state.globalPlayerPool = initialData.allPlayerIds\nthis.state.mocks[index]={'teams':defaultOrder2,'players':initialData.players,allPlayerIds:playerFile2['ids'],columns:{'team-column':{id:'team-column',title:'Teams',teamIds:filledTeamIds2},'player-column':{id:'player-column',title:'Picked Players',playerIds:[]},'player-pool':{id:'player-pool',title:'Player Pool',playerIds:this.state.globalPlayerPool}},columnOrder:['team-column','player-column','player-pool']};}}]);function Top(){var _this;_classCallCheck(this,Top);_this=_possibleConstructorReturn(this,_getPrototypeOf(Top).call(this));_this.maxRounds=3;_this.maxMockPages=false;_this.state={prevArrow:false,nextArrow:false,mocks:{},currentMock:0,totalRounds:1,message:{ids:[],teams:[],pickedPlayers:[],players:[]},currentMockObj:null,globalPlayerPool:{}};_this.callbackFunction=function(childData){// this.setState({ ...this.state, message: childData }) \n};_this.changeMockPageData=function(newState,index){//this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\nvar numIndex=index;_this.setState(_objectSpread({},_this.state,{globalPlayerPool:newState.columns['player-pool'].playerIds,message:{ids:newState.columns['team-column'].teamIds,teams:newState.teams,pickedPlayers:newState.columns['player-column'].playerIds,players:newState.players},mocks:_objectSpread({},_this.state.mocks,_defineProperty({},index,newState))}));//this.state.globalPlayerPool = (this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds)\n//console.log(this.state.mocks[index].columns['team-column'].teamIds)\n//console.log(\"ok\")\n};_this.state.mocks[0]=initialData;var defaultOrder={};var filledTeamIds=[];var counter=0;_this.state.globalPlayerPool=initialData.allPlayerIds;initialData.draftOrder[0].map(function(value){defaultOrder['team-'+counter]={id:'team-'+counter,content:value};filledTeamIds.push('team-'+counter);counter++;});var allPlayers={};_this.state.mocks[0]=_objectSpread({},_this.state.mocks[0],{teams:defaultOrder,columns:_objectSpread({},_this.state.mocks[0].columns,{'team-column':_objectSpread({},_this.state.mocks[0].columns['team-column'],{teamIds:filledTeamIds}),'player-pool':_objectSpread({},_this.state.mocks[0].columns['player-pool'],{playerIds:_this.state.globalPlayerPool})})});return _this;}_createClass(Top,[{key:\"render\",value:function render(){var _this2=this;this.state.prevArrow=this.state.currentMock>0;this.state.nextArrow=this.state.currentMock<this.state.totalRounds-1;this.maxMockPages=this.state.totalRounds>=3;/*\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    } else {\n      this.state.prevArrow = false;\n    }\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    } {\n\n    }\n    */return React.createElement(Container,null,React.createElement(\"div\",{className:\"Header\"},React.createElement(\"h1\",{className:\"logo\"},React.createElement(\"img\",{src:logo,alt:\"Logo\"}),\"Mocker\"),React.createElement(ToggleButtonGroup,{type:\"radio\",name:\"pages\",size:\"lg\",defaultValue:\"Create\",className:\"btnGrp\"},React.createElement(ToggleButton,{variant:\"danger\",value:\"About\",disabled:\"true\"},\"About\"),React.createElement(ShareModal,{teamInfo:this.state.message,allData:this.state},React.createElement(ToggleButton,{variant:\"danger\",value:\"Share\",active:true},\"Share\"),\" \"),React.createElement(ToggleButton,{variant:\"danger\",value:\"Create\",active:true},\"Create\"),React.createElement(ToggleButton,{variant:\"danger\",value:\"Load\",disabled:\"true\"},\"Load\"),React.createElement(ToggleButton,{variant:\"danger\",value:\"More\",disabled:\"true\"},\"More\"))),React.createElement(Mock,{parentCallback:this.callbackFunction,changeMockCallback:this.changeMockPageData,mockPage:this.state.mocks[this.state.currentMock],mockIndex:this.state.currentMock,teamSetup:this.state.mocks[this.state.currentMock].teams}),React.createElement(\"b\",null,\"Round \",this.state.currentMock+1),React.createElement(\"br\",null),React.createElement(Button,{disabled:!this.state.prevArrow,onClick:function onClick(){_this2.state.currentMock--;_this2.setState(_objectSpread({},_this2.state,{//globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\nmocks:_objectSpread({},_this2.state.mocks,_defineProperty({},_this2.state.currentMock,_objectSpread({},_this2.state.mocks[_this2.state.currentMock],{columns:_objectSpread({},_this2.state.mocks[_this2.state.currentMock].columns,{'player-pool':_objectSpread({},_this2.state.mocks[_this2.state.currentMock].columns['player-pool'],{playerIds:_this2.state.globalPlayerPool})})})))}));}},\"\\u2039\"),React.createElement(Button,{onClick:function onClick(){//console.log(this.state.currentMock)\n_this2.addMockPage();//this.state.prevArrow = true\n_this2.state.currentMock++;_this2.setState(_this2.state);},disabled:this.maxMockPages},\"+\"),React.createElement(Button,{disabled:!this.state.nextArrow,onClick:function onClick(){_this2.state.currentMock++;_this2.setState(_objectSpread({},_this2.state,{//globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\nmocks:_objectSpread({},_this2.state.mocks,_defineProperty({},_this2.state.currentMock,_objectSpread({},_this2.state.mocks[_this2.state.currentMock],{columns:_objectSpread({},_this2.state.mocks[_this2.state.currentMock].columns,{'player-pool':_objectSpread({},_this2.state.mocks[_this2.state.currentMock].columns['player-pool'],{playerIds:_this2.state.globalPlayerPool})})})))}));}},\"\\u203A\"));}}]);return Top;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js"],"names":["React","Mock","Container","ToggleButtonGroup","ToggleButton","ShareModal","Button","logo","initialData","playerFile2","App","createMockTable","mocks","mockIndex","callbackFunction","Top","index","state","totalRounds","filledTeamIds2","defaultOrder2","counter","draftOrder","map","value","id","content","push","players","allPlayerIds","columns","title","teamIds","playerIds","globalPlayerPool","columnOrder","maxRounds","maxMockPages","prevArrow","nextArrow","currentMock","message","ids","teams","pickedPlayers","currentMockObj","childData","changeMockPageData","newState","numIndex","setState","defaultOrder","filledTeamIds","allPlayers","addMockPage","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\nimport initialData from './initial-data.js';\nimport playerFile2 from './testPlayers.json'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n\n  return (<Mock parentCallback={callbackFunction} />);\n}\n\nclass Top extends React.Component {\n\n  maxRounds = 3;\n  maxMockPages = false;\n\n  state = {\n    prevArrow: false,\n    nextArrow: false,\n    mocks: {},\n    currentMock: 0,\n    totalRounds: 1,\n    message: {\n      ids: [],\n      teams: [],\n      pickedPlayers: [],\n      players: []\n    },\n    currentMockObj: null,\n    globalPlayerPool: {}\n  }\n\n  callbackFunction = (childData) => { // this.setState({ ...this.state, message: childData }) \n  }\n\n  changeMockPageData = (newState, index) => {\n    //this.setState({ ...this.state, message: \"ok boom\" }, () => console.log(this.state.message))\n    var numIndex = index\n\n    this.setState({\n      ...this.state,\n      globalPlayerPool: newState.columns['player-pool'].playerIds,\n      message: {\n        ids: newState.columns['team-column'].teamIds,\n        teams: newState.teams,\n        pickedPlayers: newState.columns['player-column'].playerIds,\n        players: newState.players\n      },\n      mocks: {\n        ...this.state.mocks,\n        [index]: newState\n      }\n\n    })\n\n    //this.state.globalPlayerPool = (this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds)\n\n\n    //console.log(this.state.mocks[index].columns['team-column'].teamIds)\n\n    //console.log(\"ok\")\n  }\n\n  //handleChange = val => setValue(val);\n\n  addMockPage() {\n\n    let index = this.state.totalRounds\n    this.state.totalRounds++;\n    //console.log(index)\n    let filledTeamIds2 = [];\n    let defaultOrder2 = {};\n    var counter = 32 * index;\n\n    initialData.draftOrder[index].map(function (value) {\n\n      defaultOrder2['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds2.push('team-' + counter)\n      counter++;\n    }\n    )\n\n\n\n\n\n    //console.log(filledTeamIds)\n    //this.state.globalPlayerPool = initialData.allPlayerIds\n\n    this.state.mocks[index] =\n      {\n        'teams': defaultOrder2,\n        'players': initialData.players,\n        allPlayerIds: playerFile2['ids'],\n\n        columns: {\n          'team-column': {\n            id: 'team-column',\n            title: 'Teams',\n            teamIds: filledTeamIds2\n          },\n\n          'player-column': {\n            id: 'player-column',\n            title: 'Picked Players',\n            playerIds: []\n          },\n\n          'player-pool': {\n            id: 'player-pool',\n            title: 'Player Pool',\n            playerIds: this.state.globalPlayerPool\n          }\n        },\n\n        columnOrder: ['team-column', 'player-column', 'player-pool']\n\n      }\n\n\n\n\n  }\n\n\n  constructor() {\n    super()\n    this.state.mocks[0] = initialData\n\n    let defaultOrder = {};\n    let filledTeamIds = []\n\n    var counter = 0;\n    this.state.globalPlayerPool = initialData.allPlayerIds\n\n    initialData.draftOrder[0].map(function (value) {\n\n      defaultOrder['team-' + counter] = (\n        {\n          id: 'team-' + counter,\n          content: value\n        }\n      )\n\n      filledTeamIds.push('team-' + counter)\n      counter++;\n    }\n    )\n\n    const allPlayers = {}\n\n    this.state.mocks[0] = {\n      ...this.state.mocks[0],\n      teams: defaultOrder,\n      columns: {\n        ...this.state.mocks[0].columns,\n        'team-column': {\n          ...this.state.mocks[0].columns['team-column'],\n          teamIds: filledTeamIds\n        },\n        'player-pool': {\n          ...this.state.mocks[0].columns['player-pool'],\n          playerIds: this.state.globalPlayerPool\n        }\n      }\n    }\n\n\n  }\n\n\n  render() {\n\n    this.state.prevArrow = this.state.currentMock > 0;\n    this.state.nextArrow = this.state.currentMock < this.state.totalRounds - 1;\n    this.maxMockPages = this.state.totalRounds >= 3;\n\n    /*\n    if (this.state.currentMock > 0) {\n      this.state.prevArrow = true;\n    } else {\n      this.state.prevArrow = false;\n    }\n    if (this.state.currentMock < this.state.totalRounds - 1) {\n      this.state.nextArrow = true;\n    } {\n\n    }\n    */\n\n\n    return (\n\n\n      <Container>\n\n        <div className=\"Header\">\n\n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\" />Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message} allData={this.state}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n\n        <Mock parentCallback={this.callbackFunction} changeMockCallback={this.changeMockPageData} mockPage={this.state.mocks[this.state.currentMock]} mockIndex={this.state.currentMock}\n          teamSetup={this.state.mocks[this.state.currentMock].teams} />\n\n        <b>Round {this.state.currentMock + 1}</b><br/>\n\n        <Button disabled={!this.state.prevArrow} onClick={() => {\n\n          this.state.currentMock--\n          this.setState({\n            ...this.state,\n            //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n            mocks: {\n              ...this.state.mocks,\n              [this.state.currentMock]: {\n                ...this.state.mocks[this.state.currentMock],\n                columns: {\n                  ...this.state.mocks[this.state.currentMock].columns,\n                  'player-pool': {\n                    ... this.state.mocks[this.state.currentMock].columns['player-pool'],\n                    playerIds: this.state.globalPlayerPool\n                  }\n                }\n              }\n            }\n          })\n\n\n        }}>&#8249;</Button>\n\n        <Button onClick={() => {\n          //console.log(this.state.currentMock)\n          this.addMockPage()\n          //this.state.prevArrow = true\n          this.state.currentMock++\n          this.setState(this.state)\n\n        }} disabled = {this.maxMockPages}>+</Button>\n\n        <Button disabled={!this.state.nextArrow} onClick={() => {\n\n          this.state.currentMock++\n          this.setState({\n            ...this.state,\n            //globalPlayerPool: this.state.mocks[this.state.currentMock].columns['player-pool'].playerIds,\n            mocks: {\n              ...this.state.mocks,\n              [this.state.currentMock]: {\n                ...this.state.mocks[this.state.currentMock],\n                columns: {\n                  ...this.state.mocks[this.state.currentMock].columns,\n                  'player-pool': {\n                    ... this.state.mocks[this.state.currentMock].columns['player-pool'],\n                    playerIds: this.state.globalPlayerPool\n                  }\n                }\n              }\n            }\n          })\n        }} >&#8250;</Button>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}