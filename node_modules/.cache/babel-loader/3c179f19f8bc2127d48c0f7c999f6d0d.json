{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport './TeamModal.css';\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n`;\nconst ScrollingDropdownButton = styled(DropdownButton)`\n    height: 100px;\n\n`;\nexport default function TeamModal(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //console.log(Array(teamData))\n\n\n  const teams = Array(teamData)[0]; //console.log(teams)\n\n  var x; //for (const property in teamData) {\n  //    console.log(teamData[property].name)\n  //}\n  //teams.map(value => ( console.log(value)))\n  //console.log(teamData[0])\n\n  Array(teamData).map(value => {//console.log(value)\n    //console.log(\"ok\");\n  });\n  return React.createElement(React.Fragment, null, React.createElement(HiddenButton, {\n    onClick: handleShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.teamName), React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Pick #\", props.index + 1)), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Choose Traded Team:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlSelect2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, Object.keys(teamData).map(value => React.createElement(\"option\", {\n    id: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, teamData[value].name, \" \"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Close\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Save Changes\")))));\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/TeamModal.jsx"],"names":["React","useState","styled","teamData","Modal","Button","DropdownButton","Dropdown","Form","HiddenButton","button","ScrollingDropdownButton","TeamModal","props","show","setShow","handleClose","handleShow","teams","Array","x","map","value","teamName","index","Object","keys","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,iBAAP;AAEA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,MAAO;;;;;;;;CAAnC;AAUA,MAAMC,uBAAuB,GAAGT,MAAM,CAACI,cAAD,CAAkB;;;CAAxD;AAKA,eAAe,SAASM,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMe,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC,CAJqC,CAMrC;;;AAEA,QAAMG,KAAK,GAAGC,KAAK,CAAChB,QAAD,CAAL,CAAgB,CAAhB,CAAd,CARqC,CAUrC;;AACA,MAAIiB,CAAJ,CAXqC,CAYrC;AACA;AACA;AAEA;AAEA;;AAEAD,EAAAA,KAAK,CAAChB,QAAD,CAAL,CAAgBkB,GAAhB,CAAoBC,KAAK,IAAI,CACzB;AACA;AAEH,GAJD;AASA,SACI,0CACA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEL,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACU,QADX,CADA,EAKA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAoBH,KAAK,CAACW,KAAN,GAAc,CAAlC,CADJ,CADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,EAEQ,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACC,IAAP,CAAYvB,QAAZ,EAAsBkB,GAAtB,CAA0BC,KAAK,IAC5B;AAAQ,IAAA,EAAE,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBnB,QAAQ,CAACmB,KAAD,CAAR,CAAgBK,IAApC,MADH,CADL,CAFJ,CAFR,CADA,EAcA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEX,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAdA,CAJJ,CALA,CADJ;AAqCH","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport teamData from './team-data';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form'\nimport './TeamModal.css';\n\nconst HiddenButton = styled.button`\n    \n    background-color: Transparent;\n    background-repeat:no-repeat;\n    border: none;\n    cursor:pointer;\n    overflow: hidden;\n    outline:none;\n`;\n\nconst ScrollingDropdownButton = styled(DropdownButton) `\n    height: 100px;\n\n`;\n\nexport default function TeamModal(props) {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //console.log(Array(teamData))\n\n    const teams = Array(teamData)[0]\n\n    //console.log(teams)\n    var x;\n    //for (const property in teamData) {\n    //    console.log(teamData[property].name)\n    //}\n\n    //teams.map(value => ( console.log(value)))\n\n    //console.log(teamData[0])\n\n    Array(teamData).map(value => {\n        //console.log(value)\n        //console.log(\"ok\");\n\n    }\n    )\n\n\n\n    return (\n        <>\n        <HiddenButton onClick={handleShow}>\n            {props.teamName}\n        </HiddenButton>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Pick #{props.index + 1}</Modal.Title>\n            </Modal.Header>\n            <Form>\n            <Modal.Body>Choose Traded Team:<br />\n                \n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n\n                        <Form.Control as=\"select\">\n                            {Object.keys(teamData).map(value => (\n                                <option id={value}>{teamData[value].name} </option>\n                            ))\n                            }\n                        </Form.Control>\n                    </Form.Group>\n                \n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n            </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                    Save Changes\n            </Button>\n            </Modal.Footer>\n            </Form>\n        </Modal>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}