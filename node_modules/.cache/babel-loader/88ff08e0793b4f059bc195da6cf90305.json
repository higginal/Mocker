{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/PlayerPool.jsx\";\nimport React from 'react'; //import Card from 'react-bootstrap/Card';\n\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport PlayerCard from './playerCard';\nconst Container = styled.div`\n    \n    border: 1px solid lightgrey;\n    width: 25%;\n    \n    text-align: center;\n    \n`;\nconst Title = styled.div`\n\n    width: auto;\n    font-weight: bold;\n`;\nconst PlayerList = styled.div`\n    border: black;\n    padding: 2px;\n    margin: 1%;\n    overflow-y: scroll;\n    height: 420px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => props.isDraggingOver ? !props.players.includes(props.draggingOverWith) ? 'lightcoral' : 'lightgreen' : 'white'};\n    flex-grow: 1;\n`;\nexport default class PlayerPool extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 'player-pool',\n      title: 'Unselected Players',\n      playerIds: this.props.playerIds,\n      search: \"\"\n    };\n  }\n\n  updateSearch(event) {\n    this.setState({ ...this.state,\n      search: event.target.value\n    });\n  }\n\n  render() {\n    let filteredPlayerIds = this.props.column.playerIds.filter(player => {\n      return this.props.players[player].content.toLowerCase().indexOf(this.state.search) !== -1;\n    });\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.column.title), React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Search..\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Droppable, {\n      droppableId: this.props.column.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(PlayerList, Object.assign({\n      innerRef: provided.innerRef,\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      isDraggingOver: snapshot.isDraggingOver,\n      draggingOverWith: snapshot.draggingOverWith,\n      players: this.props.allPlayerIds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), filteredPlayerIds.map((value, index) => React.createElement(PlayerCard, {\n      key: value,\n      id: value,\n      playerId: value,\n      players: this.props.players,\n      index: index,\n      color: \"DimGrey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), provided.placeholder)));\n  }\n\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/PlayerPool.jsx"],"names":["React","styled","Droppable","PlayerCard","Container","div","Title","PlayerList","props","isDraggingOver","players","includes","draggingOverWith","PlayerPool","Component","constructor","state","id","title","playerIds","search","updateSearch","event","setState","target","value","render","filteredPlayerIds","column","filter","player","content","toLowerCase","indexOf","bind","provided","snapshot","innerRef","droppableProps","allPlayerIds","map","index","placeholder"],"mappings":"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","sourcesContent":["import React from 'react';\n//import Card from 'react-bootstrap/Card';\nimport styled from 'styled-components';\nimport { Droppable } from 'react-beautiful-dnd';\nimport PlayerCard from './playerCard';\n\nconst Container = styled.div`\n    \n    border: 1px solid lightgrey;\n    width: 25%;\n    \n    text-align: center;\n    \n`;\n\nconst Title = styled.div`\n\n    width: auto;\n    font-weight: bold;\n`;\n\nconst PlayerList = styled.div`\n    border: black;\n    padding: 2px;\n    margin: 1%;\n    overflow-y: scroll;\n    height: 420px;\n    transition: background-color 0.2s ease;\n    background-color: ${props => (props.isDraggingOver ? !props.players.includes(props.draggingOverWith) ? 'lightcoral' : 'lightgreen' : 'white')};\n    flex-grow: 1;\n`;\n\nexport default class PlayerPool extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: 'player-pool',\n            title: 'Unselected Players',\n            playerIds: this.props.playerIds,\n            search: \"\"\n        }\n    }\n\n    updateSearch(event){\n        this.setState({\n            ...this.state,\n            search: event.target.value\n        })\n    }\n\n    render() {\n\n        let filteredPlayerIds = this.props.column.playerIds.filter(\n            player => {\n                return this.props.players[player].content.toLowerCase().indexOf(this.state.search) !== -1\n            }\n\n        )\n        return (\n            <Container>\n                <Title>{this.props.column.title}</Title>\n                <input type='search' placeholder=\"Search..\" value={this.state.search} onChange={this.updateSearch.bind(this)}/>\n                <Droppable droppableId={this.props.column.id}>\n                    {(provided, snapshot) => (\n                        <PlayerList\n                            innerRef={provided.innerRef}\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                            isDraggingOver={snapshot.isDraggingOver}\n                            draggingOverWith={snapshot.draggingOverWith}\n                            players={this.props.allPlayerIds}>\n                            \n                            {filteredPlayerIds.map((value, index) => (\n\n                                <PlayerCard key={value} id={value} playerId={value} players={this.props.players} index={index} \n                                    color=\"DimGrey\"\n                                />\n\n                            ))}\n                            {provided.placeholder}\n                        </PlayerList>\n                    )\n                    }\n                </Droppable>\n            </Container>\n\n        )\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}