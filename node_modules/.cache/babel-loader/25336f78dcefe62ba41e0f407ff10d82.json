{"ast":null,"code":"var _jsxFileName = \"/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n    integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n    crossorigin: \"anonymous\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"footer\", {\n    color: \"lightgrey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"developed by Avery Higgins, 2020\"));\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n  return React.createElement(Mock, {\n    parentCallback: callbackFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n}\n\nclass Top extends React.Component {\n  //handleChange = val => setValue(val);\n  constructor() {\n    super();\n    this.state = {\n      mocks: [],\n      currentMock: 0,\n      message: \"\"\n    };\n\n    this.callbackFunction = childData => {\n      this.setState({ ...this.state,\n        message: childData\n      });\n    };\n\n    this.state.mocks[0] = new Mock();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \"Mocker\"), React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"pages\",\n      size: \"lg\",\n      defaultValue: \"Create\",\n      className: \"btnGrp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"About\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"About\"), React.createElement(ShareModal, {\n      teamInfo: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Share\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Share\"), \" \"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Create\",\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Create\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"Load\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Load\"), React.createElement(ToggleButton, {\n      variant: \"danger\",\n      value: \"More\",\n      disabled: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"More\"))), //createMockTable(this.mocks, this.mockIndex, this.callbackFunction)\n    this.state.mocks.map((mock, index) => {\n      if (index === this.state.currentMock) {\n        return React.createElement(Mock, {\n          parentCallback: this.callbackFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/App.js"],"names":["React","Mock","Container","ToggleButtonGroup","ToggleButton","ShareModal","Button","logo","App","createMockTable","mocks","mockIndex","callbackFunction","Top","Component","constructor","state","currentMock","message","childData","setState","render","map","mock","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport Mock from './Mock';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ShareModal from './ShareModal';\nimport Button from 'react-bootstrap/Button';\nimport logo from './images/yellow_brown_logo.png'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n        crossorigin=\"anonymous\"\n      />\n\n      <Top />\n      <footer color=\"lightgrey\">developed by Avery Higgins, 2020</footer>\n\n    </div>\n  );\n}\n\nfunction createMockTable(mocks, mockIndex, callbackFunction) {\n\n  return (<Mock parentCallback={callbackFunction} />);\n}\n\nclass Top extends React.Component {\n\n\n  state = {\n    mocks: [],\n    currentMock: 0,\n    message: \"\"\n  }\n\n  callbackFunction = (childData) => { this.setState({ ...this.state, message: childData }) }\n\n  //handleChange = val => setValue(val);\n\n  constructor() {\n    super()\n    this.state.mocks[0] = new Mock\n    \n\n  }\n\n\n  render() {\n\n\n\n    return (\n\n      <Container>\n\n        <div className=\"Header\">\n\n          <h1 className=\"logo\">\n            <img src={logo} alt=\"Logo\" />Mocker\n          </h1>\n\n          <ToggleButtonGroup type=\"radio\" name=\"pages\" size=\"lg\" defaultValue=\"Create\" className=\"btnGrp\" >\n            <ToggleButton variant=\"danger\" value=\"About\" disabled=\"true\">About</ToggleButton>\n\n            <ShareModal teamInfo={this.state.message}><ToggleButton variant=\"danger\" value=\"Share\" active>Share</ToggleButton> </ShareModal>\n\n            <ToggleButton variant=\"danger\" value=\"Create\" active>Create</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"Load\" disabled=\"true\">Load</ToggleButton>\n            <ToggleButton variant=\"danger\" value=\"More\" disabled=\"true\">More</ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n        { //createMockTable(this.mocks, this.mockIndex, this.callbackFunction)\n          this.state.mocks.map( (mock, index) => {\n\n            if (index === this.state.currentMock){\n              return <Mock parentCallback={this.callbackFunction} />\n            }\n\n           } )\n        }\n       \n        <Button>+</Button>\n      </Container>\n\n\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}