{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport teamData from './team-data';\nexport default function DraftCompiler(draftInfo) {\n  var text = \"\"; //console.log(draftInfo.pickedPlayers.length)\n\n  if (draftInfo.ids != null) {\n    var redditFormat = \"-------REDDIT FORMAT-------------\\n\\n\";\n    draftInfo.ids.map((value, index) => {\n      let newLine = teamData[draftInfo.teams[value].content].name;\n      let playerId = draftInfo.pickedPlayers[index]; //console.log(playerId)\n\n      var chosenPick = \"--Not Selected--\";\n      var position = \"\";\n      var school = \"\";\n\n      if (playerId != null) {\n        chosenPick = draftInfo.players[playerId].content;\n        position = draftInfo.players[playerId].pos;\n        school = draftInfo.players[playerId].school;\n      }\n\n      redditFormat += \"**\" + (index + 1) + \"**.\\t**\" + newLine + \"** - **\" + chosenPick + \"**, *\" + position + \"-\" + school + \"*\\n\\n\";\n    });\n    text += redditFormat;\n    return text;\n  }\n}","map":{"version":3,"sources":["/Users/averyhiggins/Desktop/CS347/mock-app/src/DraftCompiler.jsx"],"names":["React","ReactDOM","teamData","DraftCompiler","draftInfo","text","ids","redditFormat","map","value","index","newLine","teams","content","name","playerId","pickedPlayers","chosenPick","position","school","players","pos"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAe,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;AAE7C,MAAIC,IAAI,GAAG,EAAX,CAF6C,CAI7C;;AACA,MAAID,SAAS,CAACE,GAAV,IAAiB,IAArB,EAA2B;AACvB,QAAIC,YAAY,GAAG,uCAAnB;AACAH,IAAAA,SAAS,CAACE,GAAV,CAAcE,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAEhC,UAAIC,OAAO,GAAGT,QAAQ,CAACE,SAAS,CAACQ,KAAV,CAAgBH,KAAhB,EAAuBI,OAAxB,CAAR,CAAyCC,IAAvD;AAEA,UAAIC,QAAQ,GAAGX,SAAS,CAACY,aAAV,CAAwBN,KAAxB,CAAf,CAJgC,CAKhC;;AACA,UAAIO,UAAU,GAAG,kBAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAIJ,QAAQ,IAAI,IAAhB,EAAsB;AAClBE,QAAAA,UAAU,GAAGb,SAAS,CAACgB,OAAV,CAAkBL,QAAlB,EAA4BF,OAAzC;AACAK,QAAAA,QAAQ,GAAGd,SAAS,CAACgB,OAAV,CAAkBL,QAAlB,EAA4BM,GAAvC;AACAF,QAAAA,MAAM,GAAGf,SAAS,CAACgB,OAAV,CAAkBL,QAAlB,EAA4BI,MAArC;AACH;;AAEDZ,MAAAA,YAAY,IAAK,QAAQG,KAAK,GAAC,CAAd,IAAmB,SAAnB,GAA+BC,OAA/B,GAAyC,SAAzC,GAAqDM,UAArD,GAAkE,OAAlE,GAA4EC,QAA5E,GAAuF,GAAvF,GAA6FC,MAA7F,GAAsG,OAAvH;AAEH,KAjBD;AAoBAd,IAAAA,IAAI,IAAIE,YAAR;AAEA,WAAOF,IAAP;AAEH;AAGJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport teamData from './team-data';\n\nexport default function DraftCompiler(draftInfo) {\n\n    var text = \"\"\n\n    //console.log(draftInfo.pickedPlayers.length)\n    if (draftInfo.ids != null) {\n        var redditFormat = \"-------REDDIT FORMAT-------------\\n\\n\"\n        draftInfo.ids.map((value, index) => {\n\n            let newLine = teamData[draftInfo.teams[value].content].name\n\n            let playerId = draftInfo.pickedPlayers[index]\n            //console.log(playerId)\n            var chosenPick = \"--Not Selected--\"\n            var position = \"\"\n            var school = \"\"\n            if (playerId != null) {\n                chosenPick = draftInfo.players[playerId].content\n                position = draftInfo.players[playerId].pos\n                school = draftInfo.players[playerId].school\n            }\n\n            redditFormat +=  \"**\" + (index+1) + \"**.\\t**\" + newLine + \"** - **\" + chosenPick + \"**, *\" + position + \"-\" + school + \"*\\n\\n\";\n\n        })\n\n\n        text += redditFormat;\n\n        return text;\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}